// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: garmin/gdi_smart_proto.proto
// Protobuf Java Version: 4.32.1

package nodomain.freeyourgadget.gadgetbridge.proto.garmin;

@com.google.protobuf.Generated
public final class GdiSmartProto {
  private GdiSmartProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface SmartOrBuilder extends
      // @@protoc_insertion_point(interface_extends:garmin_vivomovehr.Smart)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .garmin_vivomovehr.CalendarService calendar_service = 1;</code>
     * @return Whether the calendarService field is set.
     */
    boolean hasCalendarService();
    /**
     * <code>optional .garmin_vivomovehr.CalendarService calendar_service = 1;</code>
     * @return The calendarService.
     */
    nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiCalendarService.CalendarService getCalendarService();

    /**
     * <code>optional .garmin_vivomovehr.HttpService http_service = 2;</code>
     * @return Whether the httpService field is set.
     */
    boolean hasHttpService();
    /**
     * <code>optional .garmin_vivomovehr.HttpService http_service = 2;</code>
     * @return The httpService.
     */
    nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiHttpService.HttpService getHttpService();

    /**
     * <code>optional .garmin_vivomovehr.InstalledAppsService installed_apps_service = 3;</code>
     * @return Whether the installedAppsService field is set.
     */
    boolean hasInstalledAppsService();
    /**
     * <code>optional .garmin_vivomovehr.InstalledAppsService installed_apps_service = 3;</code>
     * @return The installedAppsService.
     */
    nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiInstalledAppsService.InstalledAppsService getInstalledAppsService();

    /**
     * <code>optional .garmin_vivomovehr.DataTransferService data_transfer_service = 7;</code>
     * @return Whether the dataTransferService field is set.
     */
    boolean hasDataTransferService();
    /**
     * <code>optional .garmin_vivomovehr.DataTransferService data_transfer_service = 7;</code>
     * @return The dataTransferService.
     */
    nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiDataTransferService.DataTransferService getDataTransferService();

    /**
     * <code>optional .garmin_vivomovehr.DeviceStatusService device_status_service = 8;</code>
     * @return Whether the deviceStatusService field is set.
     */
    boolean hasDeviceStatusService();
    /**
     * <code>optional .garmin_vivomovehr.DeviceStatusService device_status_service = 8;</code>
     * @return The deviceStatusService.
     */
    nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiDeviceStatus.DeviceStatusService getDeviceStatusService();

    /**
     * <code>optional .garmin_vivomovehr.FindMyWatchService find_my_watch_service = 12;</code>
     * @return Whether the findMyWatchService field is set.
     */
    boolean hasFindMyWatchService();
    /**
     * <code>optional .garmin_vivomovehr.FindMyWatchService find_my_watch_service = 12;</code>
     * @return The findMyWatchService.
     */
    nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiFindMyWatch.FindMyWatchService getFindMyWatchService();

    /**
     * <code>optional .garmin_vivomovehr.CoreService core_service = 13;</code>
     * @return Whether the coreService field is set.
     */
    boolean hasCoreService();
    /**
     * <code>optional .garmin_vivomovehr.CoreService core_service = 13;</code>
     * @return The coreService.
     */
    nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiCore.CoreService getCoreService();

    /**
     * <code>optional .garmin_vivomovehr.SmsNotificationService sms_notification_service = 16;</code>
     * @return Whether the smsNotificationService field is set.
     */
    boolean hasSmsNotificationService();
    /**
     * <code>optional .garmin_vivomovehr.SmsNotificationService sms_notification_service = 16;</code>
     * @return The smsNotificationService.
     */
    nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmsNotification.SmsNotificationService getSmsNotificationService();

    /**
     * <code>optional .garmin_vivomovehr.AuthenticationService authenticationService = 27;</code>
     * @return Whether the authenticationService field is set.
     */
    boolean hasAuthenticationService();
    /**
     * <code>optional .garmin_vivomovehr.AuthenticationService authenticationService = 27;</code>
     * @return The authenticationService.
     */
    nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiAuthenticationService.AuthenticationService getAuthenticationService();

    /**
     * <code>optional .garmin_vivomovehr.EcgService ecg_service = 39;</code>
     * @return Whether the ecgService field is set.
     */
    boolean hasEcgService();
    /**
     * <code>optional .garmin_vivomovehr.EcgService ecg_service = 39;</code>
     * @return The ecgService.
     */
    nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiEcgService.EcgService getEcgService();

    /**
     * <code>optional .garmin_vivomovehr.SettingsService settings_service = 42;</code>
     * @return Whether the settingsService field is set.
     */
    boolean hasSettingsService();
    /**
     * <code>optional .garmin_vivomovehr.SettingsService settings_service = 42;</code>
     * @return The settingsService.
     */
    nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSettingsService.SettingsService getSettingsService();

    /**
     * <code>optional .garmin_vivomovehr.FileSyncService file_sync_service = 43;</code>
     * @return Whether the fileSyncService field is set.
     */
    boolean hasFileSyncService();
    /**
     * <code>optional .garmin_vivomovehr.FileSyncService file_sync_service = 43;</code>
     * @return The fileSyncService.
     */
    nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiFileSyncService.FileSyncService getFileSyncService();

    /**
     * <code>optional .garmin_vivomovehr.NotificationsService notifications_service = 49;</code>
     * @return Whether the notificationsService field is set.
     */
    boolean hasNotificationsService();
    /**
     * <code>optional .garmin_vivomovehr.NotificationsService notifications_service = 49;</code>
     * @return The notificationsService.
     */
    nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiNotificationsService.NotificationsService getNotificationsService();
  }
  /**
   * Protobuf type {@code garmin_vivomovehr.Smart}
   */
  public  static final class Smart extends
      com.google.protobuf.GeneratedMessageLite<
          Smart, Smart.Builder> implements
      // @@protoc_insertion_point(message_implements:garmin_vivomovehr.Smart)
      SmartOrBuilder {
    private Smart() {
    }
    private int bitField0_;
    public static final int CALENDAR_SERVICE_FIELD_NUMBER = 1;
    private nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiCalendarService.CalendarService calendarService_;
    /**
     * <code>optional .garmin_vivomovehr.CalendarService calendar_service = 1;</code>
     */
    @java.lang.Override
    public boolean hasCalendarService() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .garmin_vivomovehr.CalendarService calendar_service = 1;</code>
     */
    @java.lang.Override
    public nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiCalendarService.CalendarService getCalendarService() {
      return calendarService_ == null ? nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiCalendarService.CalendarService.getDefaultInstance() : calendarService_;
    }
    /**
     * <code>optional .garmin_vivomovehr.CalendarService calendar_service = 1;</code>
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void setCalendarService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiCalendarService.CalendarService value) {
      value.getClass();  // minimal bytecode null check
      calendarService_ = value;
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>optional .garmin_vivomovehr.CalendarService calendar_service = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality", "ReturnValueIgnored"})
    private void mergeCalendarService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiCalendarService.CalendarService value) {
      value.getClass();  // minimal bytecode null check
      if (calendarService_ != null &&
          calendarService_ != nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiCalendarService.CalendarService.getDefaultInstance()) {
        calendarService_ =
          nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiCalendarService.CalendarService.newBuilder(calendarService_).mergeFrom(value).buildPartial();
      } else {
        calendarService_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>optional .garmin_vivomovehr.CalendarService calendar_service = 1;</code>
     */
    private void clearCalendarService() {
      calendarService_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int HTTP_SERVICE_FIELD_NUMBER = 2;
    private nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiHttpService.HttpService httpService_;
    /**
     * <code>optional .garmin_vivomovehr.HttpService http_service = 2;</code>
     */
    @java.lang.Override
    public boolean hasHttpService() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .garmin_vivomovehr.HttpService http_service = 2;</code>
     */
    @java.lang.Override
    public nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiHttpService.HttpService getHttpService() {
      return httpService_ == null ? nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiHttpService.HttpService.getDefaultInstance() : httpService_;
    }
    /**
     * <code>optional .garmin_vivomovehr.HttpService http_service = 2;</code>
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void setHttpService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiHttpService.HttpService value) {
      value.getClass();  // minimal bytecode null check
      httpService_ = value;
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .garmin_vivomovehr.HttpService http_service = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality", "ReturnValueIgnored"})
    private void mergeHttpService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiHttpService.HttpService value) {
      value.getClass();  // minimal bytecode null check
      if (httpService_ != null &&
          httpService_ != nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiHttpService.HttpService.getDefaultInstance()) {
        httpService_ =
          nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiHttpService.HttpService.newBuilder(httpService_).mergeFrom(value).buildPartial();
      } else {
        httpService_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .garmin_vivomovehr.HttpService http_service = 2;</code>
     */
    private void clearHttpService() {
      httpService_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static final int INSTALLED_APPS_SERVICE_FIELD_NUMBER = 3;
    private nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiInstalledAppsService.InstalledAppsService installedAppsService_;
    /**
     * <code>optional .garmin_vivomovehr.InstalledAppsService installed_apps_service = 3;</code>
     */
    @java.lang.Override
    public boolean hasInstalledAppsService() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .garmin_vivomovehr.InstalledAppsService installed_apps_service = 3;</code>
     */
    @java.lang.Override
    public nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiInstalledAppsService.InstalledAppsService getInstalledAppsService() {
      return installedAppsService_ == null ? nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiInstalledAppsService.InstalledAppsService.getDefaultInstance() : installedAppsService_;
    }
    /**
     * <code>optional .garmin_vivomovehr.InstalledAppsService installed_apps_service = 3;</code>
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void setInstalledAppsService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiInstalledAppsService.InstalledAppsService value) {
      value.getClass();  // minimal bytecode null check
      installedAppsService_ = value;
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>optional .garmin_vivomovehr.InstalledAppsService installed_apps_service = 3;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality", "ReturnValueIgnored"})
    private void mergeInstalledAppsService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiInstalledAppsService.InstalledAppsService value) {
      value.getClass();  // minimal bytecode null check
      if (installedAppsService_ != null &&
          installedAppsService_ != nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiInstalledAppsService.InstalledAppsService.getDefaultInstance()) {
        installedAppsService_ =
          nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiInstalledAppsService.InstalledAppsService.newBuilder(installedAppsService_).mergeFrom(value).buildPartial();
      } else {
        installedAppsService_ = value;
      }
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>optional .garmin_vivomovehr.InstalledAppsService installed_apps_service = 3;</code>
     */
    private void clearInstalledAppsService() {
      installedAppsService_ = null;
      bitField0_ = (bitField0_ & ~0x00000004);
    }

    public static final int DATA_TRANSFER_SERVICE_FIELD_NUMBER = 7;
    private nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiDataTransferService.DataTransferService dataTransferService_;
    /**
     * <code>optional .garmin_vivomovehr.DataTransferService data_transfer_service = 7;</code>
     */
    @java.lang.Override
    public boolean hasDataTransferService() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional .garmin_vivomovehr.DataTransferService data_transfer_service = 7;</code>
     */
    @java.lang.Override
    public nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiDataTransferService.DataTransferService getDataTransferService() {
      return dataTransferService_ == null ? nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiDataTransferService.DataTransferService.getDefaultInstance() : dataTransferService_;
    }
    /**
     * <code>optional .garmin_vivomovehr.DataTransferService data_transfer_service = 7;</code>
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void setDataTransferService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiDataTransferService.DataTransferService value) {
      value.getClass();  // minimal bytecode null check
      dataTransferService_ = value;
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>optional .garmin_vivomovehr.DataTransferService data_transfer_service = 7;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality", "ReturnValueIgnored"})
    private void mergeDataTransferService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiDataTransferService.DataTransferService value) {
      value.getClass();  // minimal bytecode null check
      if (dataTransferService_ != null &&
          dataTransferService_ != nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiDataTransferService.DataTransferService.getDefaultInstance()) {
        dataTransferService_ =
          nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiDataTransferService.DataTransferService.newBuilder(dataTransferService_).mergeFrom(value).buildPartial();
      } else {
        dataTransferService_ = value;
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>optional .garmin_vivomovehr.DataTransferService data_transfer_service = 7;</code>
     */
    private void clearDataTransferService() {
      dataTransferService_ = null;
      bitField0_ = (bitField0_ & ~0x00000008);
    }

    public static final int DEVICE_STATUS_SERVICE_FIELD_NUMBER = 8;
    private nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiDeviceStatus.DeviceStatusService deviceStatusService_;
    /**
     * <code>optional .garmin_vivomovehr.DeviceStatusService device_status_service = 8;</code>
     */
    @java.lang.Override
    public boolean hasDeviceStatusService() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional .garmin_vivomovehr.DeviceStatusService device_status_service = 8;</code>
     */
    @java.lang.Override
    public nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiDeviceStatus.DeviceStatusService getDeviceStatusService() {
      return deviceStatusService_ == null ? nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiDeviceStatus.DeviceStatusService.getDefaultInstance() : deviceStatusService_;
    }
    /**
     * <code>optional .garmin_vivomovehr.DeviceStatusService device_status_service = 8;</code>
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void setDeviceStatusService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiDeviceStatus.DeviceStatusService value) {
      value.getClass();  // minimal bytecode null check
      deviceStatusService_ = value;
      bitField0_ |= 0x00000010;
    }
    /**
     * <code>optional .garmin_vivomovehr.DeviceStatusService device_status_service = 8;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality", "ReturnValueIgnored"})
    private void mergeDeviceStatusService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiDeviceStatus.DeviceStatusService value) {
      value.getClass();  // minimal bytecode null check
      if (deviceStatusService_ != null &&
          deviceStatusService_ != nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiDeviceStatus.DeviceStatusService.getDefaultInstance()) {
        deviceStatusService_ =
          nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiDeviceStatus.DeviceStatusService.newBuilder(deviceStatusService_).mergeFrom(value).buildPartial();
      } else {
        deviceStatusService_ = value;
      }
      bitField0_ |= 0x00000010;
    }
    /**
     * <code>optional .garmin_vivomovehr.DeviceStatusService device_status_service = 8;</code>
     */
    private void clearDeviceStatusService() {
      deviceStatusService_ = null;
      bitField0_ = (bitField0_ & ~0x00000010);
    }

    public static final int FIND_MY_WATCH_SERVICE_FIELD_NUMBER = 12;
    private nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiFindMyWatch.FindMyWatchService findMyWatchService_;
    /**
     * <code>optional .garmin_vivomovehr.FindMyWatchService find_my_watch_service = 12;</code>
     */
    @java.lang.Override
    public boolean hasFindMyWatchService() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional .garmin_vivomovehr.FindMyWatchService find_my_watch_service = 12;</code>
     */
    @java.lang.Override
    public nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiFindMyWatch.FindMyWatchService getFindMyWatchService() {
      return findMyWatchService_ == null ? nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiFindMyWatch.FindMyWatchService.getDefaultInstance() : findMyWatchService_;
    }
    /**
     * <code>optional .garmin_vivomovehr.FindMyWatchService find_my_watch_service = 12;</code>
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void setFindMyWatchService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiFindMyWatch.FindMyWatchService value) {
      value.getClass();  // minimal bytecode null check
      findMyWatchService_ = value;
      bitField0_ |= 0x00000020;
    }
    /**
     * <code>optional .garmin_vivomovehr.FindMyWatchService find_my_watch_service = 12;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality", "ReturnValueIgnored"})
    private void mergeFindMyWatchService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiFindMyWatch.FindMyWatchService value) {
      value.getClass();  // minimal bytecode null check
      if (findMyWatchService_ != null &&
          findMyWatchService_ != nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiFindMyWatch.FindMyWatchService.getDefaultInstance()) {
        findMyWatchService_ =
          nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiFindMyWatch.FindMyWatchService.newBuilder(findMyWatchService_).mergeFrom(value).buildPartial();
      } else {
        findMyWatchService_ = value;
      }
      bitField0_ |= 0x00000020;
    }
    /**
     * <code>optional .garmin_vivomovehr.FindMyWatchService find_my_watch_service = 12;</code>
     */
    private void clearFindMyWatchService() {
      findMyWatchService_ = null;
      bitField0_ = (bitField0_ & ~0x00000020);
    }

    public static final int CORE_SERVICE_FIELD_NUMBER = 13;
    private nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiCore.CoreService coreService_;
    /**
     * <code>optional .garmin_vivomovehr.CoreService core_service = 13;</code>
     */
    @java.lang.Override
    public boolean hasCoreService() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional .garmin_vivomovehr.CoreService core_service = 13;</code>
     */
    @java.lang.Override
    public nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiCore.CoreService getCoreService() {
      return coreService_ == null ? nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiCore.CoreService.getDefaultInstance() : coreService_;
    }
    /**
     * <code>optional .garmin_vivomovehr.CoreService core_service = 13;</code>
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void setCoreService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiCore.CoreService value) {
      value.getClass();  // minimal bytecode null check
      coreService_ = value;
      bitField0_ |= 0x00000040;
    }
    /**
     * <code>optional .garmin_vivomovehr.CoreService core_service = 13;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality", "ReturnValueIgnored"})
    private void mergeCoreService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiCore.CoreService value) {
      value.getClass();  // minimal bytecode null check
      if (coreService_ != null &&
          coreService_ != nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiCore.CoreService.getDefaultInstance()) {
        coreService_ =
          nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiCore.CoreService.newBuilder(coreService_).mergeFrom(value).buildPartial();
      } else {
        coreService_ = value;
      }
      bitField0_ |= 0x00000040;
    }
    /**
     * <code>optional .garmin_vivomovehr.CoreService core_service = 13;</code>
     */
    private void clearCoreService() {
      coreService_ = null;
      bitField0_ = (bitField0_ & ~0x00000040);
    }

    public static final int SMS_NOTIFICATION_SERVICE_FIELD_NUMBER = 16;
    private nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmsNotification.SmsNotificationService smsNotificationService_;
    /**
     * <code>optional .garmin_vivomovehr.SmsNotificationService sms_notification_service = 16;</code>
     */
    @java.lang.Override
    public boolean hasSmsNotificationService() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional .garmin_vivomovehr.SmsNotificationService sms_notification_service = 16;</code>
     */
    @java.lang.Override
    public nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmsNotification.SmsNotificationService getSmsNotificationService() {
      return smsNotificationService_ == null ? nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmsNotification.SmsNotificationService.getDefaultInstance() : smsNotificationService_;
    }
    /**
     * <code>optional .garmin_vivomovehr.SmsNotificationService sms_notification_service = 16;</code>
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void setSmsNotificationService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmsNotification.SmsNotificationService value) {
      value.getClass();  // minimal bytecode null check
      smsNotificationService_ = value;
      bitField0_ |= 0x00000080;
    }
    /**
     * <code>optional .garmin_vivomovehr.SmsNotificationService sms_notification_service = 16;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality", "ReturnValueIgnored"})
    private void mergeSmsNotificationService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmsNotification.SmsNotificationService value) {
      value.getClass();  // minimal bytecode null check
      if (smsNotificationService_ != null &&
          smsNotificationService_ != nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmsNotification.SmsNotificationService.getDefaultInstance()) {
        smsNotificationService_ =
          nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmsNotification.SmsNotificationService.newBuilder(smsNotificationService_).mergeFrom(value).buildPartial();
      } else {
        smsNotificationService_ = value;
      }
      bitField0_ |= 0x00000080;
    }
    /**
     * <code>optional .garmin_vivomovehr.SmsNotificationService sms_notification_service = 16;</code>
     */
    private void clearSmsNotificationService() {
      smsNotificationService_ = null;
      bitField0_ = (bitField0_ & ~0x00000080);
    }

    public static final int AUTHENTICATIONSERVICE_FIELD_NUMBER = 27;
    private nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiAuthenticationService.AuthenticationService authenticationService_;
    /**
     * <code>optional .garmin_vivomovehr.AuthenticationService authenticationService = 27;</code>
     */
    @java.lang.Override
    public boolean hasAuthenticationService() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional .garmin_vivomovehr.AuthenticationService authenticationService = 27;</code>
     */
    @java.lang.Override
    public nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiAuthenticationService.AuthenticationService getAuthenticationService() {
      return authenticationService_ == null ? nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiAuthenticationService.AuthenticationService.getDefaultInstance() : authenticationService_;
    }
    /**
     * <code>optional .garmin_vivomovehr.AuthenticationService authenticationService = 27;</code>
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void setAuthenticationService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiAuthenticationService.AuthenticationService value) {
      value.getClass();  // minimal bytecode null check
      authenticationService_ = value;
      bitField0_ |= 0x00000100;
    }
    /**
     * <code>optional .garmin_vivomovehr.AuthenticationService authenticationService = 27;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality", "ReturnValueIgnored"})
    private void mergeAuthenticationService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiAuthenticationService.AuthenticationService value) {
      value.getClass();  // minimal bytecode null check
      if (authenticationService_ != null &&
          authenticationService_ != nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiAuthenticationService.AuthenticationService.getDefaultInstance()) {
        authenticationService_ =
          nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiAuthenticationService.AuthenticationService.newBuilder(authenticationService_).mergeFrom(value).buildPartial();
      } else {
        authenticationService_ = value;
      }
      bitField0_ |= 0x00000100;
    }
    /**
     * <code>optional .garmin_vivomovehr.AuthenticationService authenticationService = 27;</code>
     */
    private void clearAuthenticationService() {
      authenticationService_ = null;
      bitField0_ = (bitField0_ & ~0x00000100);
    }

    public static final int ECG_SERVICE_FIELD_NUMBER = 39;
    private nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiEcgService.EcgService ecgService_;
    /**
     * <code>optional .garmin_vivomovehr.EcgService ecg_service = 39;</code>
     */
    @java.lang.Override
    public boolean hasEcgService() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional .garmin_vivomovehr.EcgService ecg_service = 39;</code>
     */
    @java.lang.Override
    public nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiEcgService.EcgService getEcgService() {
      return ecgService_ == null ? nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiEcgService.EcgService.getDefaultInstance() : ecgService_;
    }
    /**
     * <code>optional .garmin_vivomovehr.EcgService ecg_service = 39;</code>
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void setEcgService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiEcgService.EcgService value) {
      value.getClass();  // minimal bytecode null check
      ecgService_ = value;
      bitField0_ |= 0x00000200;
    }
    /**
     * <code>optional .garmin_vivomovehr.EcgService ecg_service = 39;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality", "ReturnValueIgnored"})
    private void mergeEcgService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiEcgService.EcgService value) {
      value.getClass();  // minimal bytecode null check
      if (ecgService_ != null &&
          ecgService_ != nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiEcgService.EcgService.getDefaultInstance()) {
        ecgService_ =
          nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiEcgService.EcgService.newBuilder(ecgService_).mergeFrom(value).buildPartial();
      } else {
        ecgService_ = value;
      }
      bitField0_ |= 0x00000200;
    }
    /**
     * <code>optional .garmin_vivomovehr.EcgService ecg_service = 39;</code>
     */
    private void clearEcgService() {
      ecgService_ = null;
      bitField0_ = (bitField0_ & ~0x00000200);
    }

    public static final int SETTINGS_SERVICE_FIELD_NUMBER = 42;
    private nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSettingsService.SettingsService settingsService_;
    /**
     * <code>optional .garmin_vivomovehr.SettingsService settings_service = 42;</code>
     */
    @java.lang.Override
    public boolean hasSettingsService() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>optional .garmin_vivomovehr.SettingsService settings_service = 42;</code>
     */
    @java.lang.Override
    public nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSettingsService.SettingsService getSettingsService() {
      return settingsService_ == null ? nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSettingsService.SettingsService.getDefaultInstance() : settingsService_;
    }
    /**
     * <code>optional .garmin_vivomovehr.SettingsService settings_service = 42;</code>
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void setSettingsService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSettingsService.SettingsService value) {
      value.getClass();  // minimal bytecode null check
      settingsService_ = value;
      bitField0_ |= 0x00000400;
    }
    /**
     * <code>optional .garmin_vivomovehr.SettingsService settings_service = 42;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality", "ReturnValueIgnored"})
    private void mergeSettingsService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSettingsService.SettingsService value) {
      value.getClass();  // minimal bytecode null check
      if (settingsService_ != null &&
          settingsService_ != nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSettingsService.SettingsService.getDefaultInstance()) {
        settingsService_ =
          nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSettingsService.SettingsService.newBuilder(settingsService_).mergeFrom(value).buildPartial();
      } else {
        settingsService_ = value;
      }
      bitField0_ |= 0x00000400;
    }
    /**
     * <code>optional .garmin_vivomovehr.SettingsService settings_service = 42;</code>
     */
    private void clearSettingsService() {
      settingsService_ = null;
      bitField0_ = (bitField0_ & ~0x00000400);
    }

    public static final int FILE_SYNC_SERVICE_FIELD_NUMBER = 43;
    private nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiFileSyncService.FileSyncService fileSyncService_;
    /**
     * <code>optional .garmin_vivomovehr.FileSyncService file_sync_service = 43;</code>
     */
    @java.lang.Override
    public boolean hasFileSyncService() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <code>optional .garmin_vivomovehr.FileSyncService file_sync_service = 43;</code>
     */
    @java.lang.Override
    public nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiFileSyncService.FileSyncService getFileSyncService() {
      return fileSyncService_ == null ? nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiFileSyncService.FileSyncService.getDefaultInstance() : fileSyncService_;
    }
    /**
     * <code>optional .garmin_vivomovehr.FileSyncService file_sync_service = 43;</code>
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void setFileSyncService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiFileSyncService.FileSyncService value) {
      value.getClass();  // minimal bytecode null check
      fileSyncService_ = value;
      bitField0_ |= 0x00000800;
    }
    /**
     * <code>optional .garmin_vivomovehr.FileSyncService file_sync_service = 43;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality", "ReturnValueIgnored"})
    private void mergeFileSyncService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiFileSyncService.FileSyncService value) {
      value.getClass();  // minimal bytecode null check
      if (fileSyncService_ != null &&
          fileSyncService_ != nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiFileSyncService.FileSyncService.getDefaultInstance()) {
        fileSyncService_ =
          nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiFileSyncService.FileSyncService.newBuilder(fileSyncService_).mergeFrom(value).buildPartial();
      } else {
        fileSyncService_ = value;
      }
      bitField0_ |= 0x00000800;
    }
    /**
     * <code>optional .garmin_vivomovehr.FileSyncService file_sync_service = 43;</code>
     */
    private void clearFileSyncService() {
      fileSyncService_ = null;
      bitField0_ = (bitField0_ & ~0x00000800);
    }

    public static final int NOTIFICATIONS_SERVICE_FIELD_NUMBER = 49;
    private nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiNotificationsService.NotificationsService notificationsService_;
    /**
     * <code>optional .garmin_vivomovehr.NotificationsService notifications_service = 49;</code>
     */
    @java.lang.Override
    public boolean hasNotificationsService() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <code>optional .garmin_vivomovehr.NotificationsService notifications_service = 49;</code>
     */
    @java.lang.Override
    public nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiNotificationsService.NotificationsService getNotificationsService() {
      return notificationsService_ == null ? nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiNotificationsService.NotificationsService.getDefaultInstance() : notificationsService_;
    }
    /**
     * <code>optional .garmin_vivomovehr.NotificationsService notifications_service = 49;</code>
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void setNotificationsService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiNotificationsService.NotificationsService value) {
      value.getClass();  // minimal bytecode null check
      notificationsService_ = value;
      bitField0_ |= 0x00001000;
    }
    /**
     * <code>optional .garmin_vivomovehr.NotificationsService notifications_service = 49;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality", "ReturnValueIgnored"})
    private void mergeNotificationsService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiNotificationsService.NotificationsService value) {
      value.getClass();  // minimal bytecode null check
      if (notificationsService_ != null &&
          notificationsService_ != nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiNotificationsService.NotificationsService.getDefaultInstance()) {
        notificationsService_ =
          nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiNotificationsService.NotificationsService.newBuilder(notificationsService_).mergeFrom(value).buildPartial();
      } else {
        notificationsService_ = value;
      }
      bitField0_ |= 0x00001000;
    }
    /**
     * <code>optional .garmin_vivomovehr.NotificationsService notifications_service = 49;</code>
     */
    private void clearNotificationsService() {
      notificationsService_ = null;
      bitField0_ = (bitField0_ & ~0x00001000);
    }

    public static nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmartProto.Smart parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmartProto.Smart parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmartProto.Smart parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmartProto.Smart parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmartProto.Smart parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmartProto.Smart parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmartProto.Smart parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmartProto.Smart parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmartProto.Smart parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmartProto.Smart parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmartProto.Smart parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmartProto.Smart parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmartProto.Smart prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code garmin_vivomovehr.Smart}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmartProto.Smart, Builder> implements
        // @@protoc_insertion_point(builder_implements:garmin_vivomovehr.Smart)
        nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmartProto.SmartOrBuilder {
      // Construct using nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmartProto.Smart.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .garmin_vivomovehr.CalendarService calendar_service = 1;</code>
       */
      @java.lang.Override
      public boolean hasCalendarService() {
        return instance.hasCalendarService();
      }
      /**
       * <code>optional .garmin_vivomovehr.CalendarService calendar_service = 1;</code>
       */
      @java.lang.Override
      public nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiCalendarService.CalendarService getCalendarService() {
        return instance.getCalendarService();
      }
      /**
       * <code>optional .garmin_vivomovehr.CalendarService calendar_service = 1;</code>
       */
      public Builder setCalendarService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiCalendarService.CalendarService value) {
        copyOnWrite();
        instance.setCalendarService(value);
        return this;
        }
      /**
       * <code>optional .garmin_vivomovehr.CalendarService calendar_service = 1;</code>
       */
      public Builder setCalendarService(
          nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiCalendarService.CalendarService.Builder builderForValue) {
        copyOnWrite();
        instance.setCalendarService(builderForValue.build());
        return this;
      }
      /**
       * <code>optional .garmin_vivomovehr.CalendarService calendar_service = 1;</code>
       */
      public Builder mergeCalendarService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiCalendarService.CalendarService value) {
        copyOnWrite();
        instance.mergeCalendarService(value);
        return this;
      }
      /**
       * <code>optional .garmin_vivomovehr.CalendarService calendar_service = 1;</code>
       */
      public Builder clearCalendarService() {  copyOnWrite();
        instance.clearCalendarService();
        return this;
      }

      /**
       * <code>optional .garmin_vivomovehr.HttpService http_service = 2;</code>
       */
      @java.lang.Override
      public boolean hasHttpService() {
        return instance.hasHttpService();
      }
      /**
       * <code>optional .garmin_vivomovehr.HttpService http_service = 2;</code>
       */
      @java.lang.Override
      public nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiHttpService.HttpService getHttpService() {
        return instance.getHttpService();
      }
      /**
       * <code>optional .garmin_vivomovehr.HttpService http_service = 2;</code>
       */
      public Builder setHttpService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiHttpService.HttpService value) {
        copyOnWrite();
        instance.setHttpService(value);
        return this;
        }
      /**
       * <code>optional .garmin_vivomovehr.HttpService http_service = 2;</code>
       */
      public Builder setHttpService(
          nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiHttpService.HttpService.Builder builderForValue) {
        copyOnWrite();
        instance.setHttpService(builderForValue.build());
        return this;
      }
      /**
       * <code>optional .garmin_vivomovehr.HttpService http_service = 2;</code>
       */
      public Builder mergeHttpService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiHttpService.HttpService value) {
        copyOnWrite();
        instance.mergeHttpService(value);
        return this;
      }
      /**
       * <code>optional .garmin_vivomovehr.HttpService http_service = 2;</code>
       */
      public Builder clearHttpService() {  copyOnWrite();
        instance.clearHttpService();
        return this;
      }

      /**
       * <code>optional .garmin_vivomovehr.InstalledAppsService installed_apps_service = 3;</code>
       */
      @java.lang.Override
      public boolean hasInstalledAppsService() {
        return instance.hasInstalledAppsService();
      }
      /**
       * <code>optional .garmin_vivomovehr.InstalledAppsService installed_apps_service = 3;</code>
       */
      @java.lang.Override
      public nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiInstalledAppsService.InstalledAppsService getInstalledAppsService() {
        return instance.getInstalledAppsService();
      }
      /**
       * <code>optional .garmin_vivomovehr.InstalledAppsService installed_apps_service = 3;</code>
       */
      public Builder setInstalledAppsService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiInstalledAppsService.InstalledAppsService value) {
        copyOnWrite();
        instance.setInstalledAppsService(value);
        return this;
        }
      /**
       * <code>optional .garmin_vivomovehr.InstalledAppsService installed_apps_service = 3;</code>
       */
      public Builder setInstalledAppsService(
          nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiInstalledAppsService.InstalledAppsService.Builder builderForValue) {
        copyOnWrite();
        instance.setInstalledAppsService(builderForValue.build());
        return this;
      }
      /**
       * <code>optional .garmin_vivomovehr.InstalledAppsService installed_apps_service = 3;</code>
       */
      public Builder mergeInstalledAppsService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiInstalledAppsService.InstalledAppsService value) {
        copyOnWrite();
        instance.mergeInstalledAppsService(value);
        return this;
      }
      /**
       * <code>optional .garmin_vivomovehr.InstalledAppsService installed_apps_service = 3;</code>
       */
      public Builder clearInstalledAppsService() {  copyOnWrite();
        instance.clearInstalledAppsService();
        return this;
      }

      /**
       * <code>optional .garmin_vivomovehr.DataTransferService data_transfer_service = 7;</code>
       */
      @java.lang.Override
      public boolean hasDataTransferService() {
        return instance.hasDataTransferService();
      }
      /**
       * <code>optional .garmin_vivomovehr.DataTransferService data_transfer_service = 7;</code>
       */
      @java.lang.Override
      public nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiDataTransferService.DataTransferService getDataTransferService() {
        return instance.getDataTransferService();
      }
      /**
       * <code>optional .garmin_vivomovehr.DataTransferService data_transfer_service = 7;</code>
       */
      public Builder setDataTransferService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiDataTransferService.DataTransferService value) {
        copyOnWrite();
        instance.setDataTransferService(value);
        return this;
        }
      /**
       * <code>optional .garmin_vivomovehr.DataTransferService data_transfer_service = 7;</code>
       */
      public Builder setDataTransferService(
          nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiDataTransferService.DataTransferService.Builder builderForValue) {
        copyOnWrite();
        instance.setDataTransferService(builderForValue.build());
        return this;
      }
      /**
       * <code>optional .garmin_vivomovehr.DataTransferService data_transfer_service = 7;</code>
       */
      public Builder mergeDataTransferService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiDataTransferService.DataTransferService value) {
        copyOnWrite();
        instance.mergeDataTransferService(value);
        return this;
      }
      /**
       * <code>optional .garmin_vivomovehr.DataTransferService data_transfer_service = 7;</code>
       */
      public Builder clearDataTransferService() {  copyOnWrite();
        instance.clearDataTransferService();
        return this;
      }

      /**
       * <code>optional .garmin_vivomovehr.DeviceStatusService device_status_service = 8;</code>
       */
      @java.lang.Override
      public boolean hasDeviceStatusService() {
        return instance.hasDeviceStatusService();
      }
      /**
       * <code>optional .garmin_vivomovehr.DeviceStatusService device_status_service = 8;</code>
       */
      @java.lang.Override
      public nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiDeviceStatus.DeviceStatusService getDeviceStatusService() {
        return instance.getDeviceStatusService();
      }
      /**
       * <code>optional .garmin_vivomovehr.DeviceStatusService device_status_service = 8;</code>
       */
      public Builder setDeviceStatusService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiDeviceStatus.DeviceStatusService value) {
        copyOnWrite();
        instance.setDeviceStatusService(value);
        return this;
        }
      /**
       * <code>optional .garmin_vivomovehr.DeviceStatusService device_status_service = 8;</code>
       */
      public Builder setDeviceStatusService(
          nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiDeviceStatus.DeviceStatusService.Builder builderForValue) {
        copyOnWrite();
        instance.setDeviceStatusService(builderForValue.build());
        return this;
      }
      /**
       * <code>optional .garmin_vivomovehr.DeviceStatusService device_status_service = 8;</code>
       */
      public Builder mergeDeviceStatusService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiDeviceStatus.DeviceStatusService value) {
        copyOnWrite();
        instance.mergeDeviceStatusService(value);
        return this;
      }
      /**
       * <code>optional .garmin_vivomovehr.DeviceStatusService device_status_service = 8;</code>
       */
      public Builder clearDeviceStatusService() {  copyOnWrite();
        instance.clearDeviceStatusService();
        return this;
      }

      /**
       * <code>optional .garmin_vivomovehr.FindMyWatchService find_my_watch_service = 12;</code>
       */
      @java.lang.Override
      public boolean hasFindMyWatchService() {
        return instance.hasFindMyWatchService();
      }
      /**
       * <code>optional .garmin_vivomovehr.FindMyWatchService find_my_watch_service = 12;</code>
       */
      @java.lang.Override
      public nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiFindMyWatch.FindMyWatchService getFindMyWatchService() {
        return instance.getFindMyWatchService();
      }
      /**
       * <code>optional .garmin_vivomovehr.FindMyWatchService find_my_watch_service = 12;</code>
       */
      public Builder setFindMyWatchService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiFindMyWatch.FindMyWatchService value) {
        copyOnWrite();
        instance.setFindMyWatchService(value);
        return this;
        }
      /**
       * <code>optional .garmin_vivomovehr.FindMyWatchService find_my_watch_service = 12;</code>
       */
      public Builder setFindMyWatchService(
          nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiFindMyWatch.FindMyWatchService.Builder builderForValue) {
        copyOnWrite();
        instance.setFindMyWatchService(builderForValue.build());
        return this;
      }
      /**
       * <code>optional .garmin_vivomovehr.FindMyWatchService find_my_watch_service = 12;</code>
       */
      public Builder mergeFindMyWatchService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiFindMyWatch.FindMyWatchService value) {
        copyOnWrite();
        instance.mergeFindMyWatchService(value);
        return this;
      }
      /**
       * <code>optional .garmin_vivomovehr.FindMyWatchService find_my_watch_service = 12;</code>
       */
      public Builder clearFindMyWatchService() {  copyOnWrite();
        instance.clearFindMyWatchService();
        return this;
      }

      /**
       * <code>optional .garmin_vivomovehr.CoreService core_service = 13;</code>
       */
      @java.lang.Override
      public boolean hasCoreService() {
        return instance.hasCoreService();
      }
      /**
       * <code>optional .garmin_vivomovehr.CoreService core_service = 13;</code>
       */
      @java.lang.Override
      public nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiCore.CoreService getCoreService() {
        return instance.getCoreService();
      }
      /**
       * <code>optional .garmin_vivomovehr.CoreService core_service = 13;</code>
       */
      public Builder setCoreService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiCore.CoreService value) {
        copyOnWrite();
        instance.setCoreService(value);
        return this;
        }
      /**
       * <code>optional .garmin_vivomovehr.CoreService core_service = 13;</code>
       */
      public Builder setCoreService(
          nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiCore.CoreService.Builder builderForValue) {
        copyOnWrite();
        instance.setCoreService(builderForValue.build());
        return this;
      }
      /**
       * <code>optional .garmin_vivomovehr.CoreService core_service = 13;</code>
       */
      public Builder mergeCoreService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiCore.CoreService value) {
        copyOnWrite();
        instance.mergeCoreService(value);
        return this;
      }
      /**
       * <code>optional .garmin_vivomovehr.CoreService core_service = 13;</code>
       */
      public Builder clearCoreService() {  copyOnWrite();
        instance.clearCoreService();
        return this;
      }

      /**
       * <code>optional .garmin_vivomovehr.SmsNotificationService sms_notification_service = 16;</code>
       */
      @java.lang.Override
      public boolean hasSmsNotificationService() {
        return instance.hasSmsNotificationService();
      }
      /**
       * <code>optional .garmin_vivomovehr.SmsNotificationService sms_notification_service = 16;</code>
       */
      @java.lang.Override
      public nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmsNotification.SmsNotificationService getSmsNotificationService() {
        return instance.getSmsNotificationService();
      }
      /**
       * <code>optional .garmin_vivomovehr.SmsNotificationService sms_notification_service = 16;</code>
       */
      public Builder setSmsNotificationService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmsNotification.SmsNotificationService value) {
        copyOnWrite();
        instance.setSmsNotificationService(value);
        return this;
        }
      /**
       * <code>optional .garmin_vivomovehr.SmsNotificationService sms_notification_service = 16;</code>
       */
      public Builder setSmsNotificationService(
          nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmsNotification.SmsNotificationService.Builder builderForValue) {
        copyOnWrite();
        instance.setSmsNotificationService(builderForValue.build());
        return this;
      }
      /**
       * <code>optional .garmin_vivomovehr.SmsNotificationService sms_notification_service = 16;</code>
       */
      public Builder mergeSmsNotificationService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmsNotification.SmsNotificationService value) {
        copyOnWrite();
        instance.mergeSmsNotificationService(value);
        return this;
      }
      /**
       * <code>optional .garmin_vivomovehr.SmsNotificationService sms_notification_service = 16;</code>
       */
      public Builder clearSmsNotificationService() {  copyOnWrite();
        instance.clearSmsNotificationService();
        return this;
      }

      /**
       * <code>optional .garmin_vivomovehr.AuthenticationService authenticationService = 27;</code>
       */
      @java.lang.Override
      public boolean hasAuthenticationService() {
        return instance.hasAuthenticationService();
      }
      /**
       * <code>optional .garmin_vivomovehr.AuthenticationService authenticationService = 27;</code>
       */
      @java.lang.Override
      public nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiAuthenticationService.AuthenticationService getAuthenticationService() {
        return instance.getAuthenticationService();
      }
      /**
       * <code>optional .garmin_vivomovehr.AuthenticationService authenticationService = 27;</code>
       */
      public Builder setAuthenticationService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiAuthenticationService.AuthenticationService value) {
        copyOnWrite();
        instance.setAuthenticationService(value);
        return this;
        }
      /**
       * <code>optional .garmin_vivomovehr.AuthenticationService authenticationService = 27;</code>
       */
      public Builder setAuthenticationService(
          nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiAuthenticationService.AuthenticationService.Builder builderForValue) {
        copyOnWrite();
        instance.setAuthenticationService(builderForValue.build());
        return this;
      }
      /**
       * <code>optional .garmin_vivomovehr.AuthenticationService authenticationService = 27;</code>
       */
      public Builder mergeAuthenticationService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiAuthenticationService.AuthenticationService value) {
        copyOnWrite();
        instance.mergeAuthenticationService(value);
        return this;
      }
      /**
       * <code>optional .garmin_vivomovehr.AuthenticationService authenticationService = 27;</code>
       */
      public Builder clearAuthenticationService() {  copyOnWrite();
        instance.clearAuthenticationService();
        return this;
      }

      /**
       * <code>optional .garmin_vivomovehr.EcgService ecg_service = 39;</code>
       */
      @java.lang.Override
      public boolean hasEcgService() {
        return instance.hasEcgService();
      }
      /**
       * <code>optional .garmin_vivomovehr.EcgService ecg_service = 39;</code>
       */
      @java.lang.Override
      public nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiEcgService.EcgService getEcgService() {
        return instance.getEcgService();
      }
      /**
       * <code>optional .garmin_vivomovehr.EcgService ecg_service = 39;</code>
       */
      public Builder setEcgService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiEcgService.EcgService value) {
        copyOnWrite();
        instance.setEcgService(value);
        return this;
        }
      /**
       * <code>optional .garmin_vivomovehr.EcgService ecg_service = 39;</code>
       */
      public Builder setEcgService(
          nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiEcgService.EcgService.Builder builderForValue) {
        copyOnWrite();
        instance.setEcgService(builderForValue.build());
        return this;
      }
      /**
       * <code>optional .garmin_vivomovehr.EcgService ecg_service = 39;</code>
       */
      public Builder mergeEcgService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiEcgService.EcgService value) {
        copyOnWrite();
        instance.mergeEcgService(value);
        return this;
      }
      /**
       * <code>optional .garmin_vivomovehr.EcgService ecg_service = 39;</code>
       */
      public Builder clearEcgService() {  copyOnWrite();
        instance.clearEcgService();
        return this;
      }

      /**
       * <code>optional .garmin_vivomovehr.SettingsService settings_service = 42;</code>
       */
      @java.lang.Override
      public boolean hasSettingsService() {
        return instance.hasSettingsService();
      }
      /**
       * <code>optional .garmin_vivomovehr.SettingsService settings_service = 42;</code>
       */
      @java.lang.Override
      public nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSettingsService.SettingsService getSettingsService() {
        return instance.getSettingsService();
      }
      /**
       * <code>optional .garmin_vivomovehr.SettingsService settings_service = 42;</code>
       */
      public Builder setSettingsService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSettingsService.SettingsService value) {
        copyOnWrite();
        instance.setSettingsService(value);
        return this;
        }
      /**
       * <code>optional .garmin_vivomovehr.SettingsService settings_service = 42;</code>
       */
      public Builder setSettingsService(
          nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSettingsService.SettingsService.Builder builderForValue) {
        copyOnWrite();
        instance.setSettingsService(builderForValue.build());
        return this;
      }
      /**
       * <code>optional .garmin_vivomovehr.SettingsService settings_service = 42;</code>
       */
      public Builder mergeSettingsService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSettingsService.SettingsService value) {
        copyOnWrite();
        instance.mergeSettingsService(value);
        return this;
      }
      /**
       * <code>optional .garmin_vivomovehr.SettingsService settings_service = 42;</code>
       */
      public Builder clearSettingsService() {  copyOnWrite();
        instance.clearSettingsService();
        return this;
      }

      /**
       * <code>optional .garmin_vivomovehr.FileSyncService file_sync_service = 43;</code>
       */
      @java.lang.Override
      public boolean hasFileSyncService() {
        return instance.hasFileSyncService();
      }
      /**
       * <code>optional .garmin_vivomovehr.FileSyncService file_sync_service = 43;</code>
       */
      @java.lang.Override
      public nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiFileSyncService.FileSyncService getFileSyncService() {
        return instance.getFileSyncService();
      }
      /**
       * <code>optional .garmin_vivomovehr.FileSyncService file_sync_service = 43;</code>
       */
      public Builder setFileSyncService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiFileSyncService.FileSyncService value) {
        copyOnWrite();
        instance.setFileSyncService(value);
        return this;
        }
      /**
       * <code>optional .garmin_vivomovehr.FileSyncService file_sync_service = 43;</code>
       */
      public Builder setFileSyncService(
          nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiFileSyncService.FileSyncService.Builder builderForValue) {
        copyOnWrite();
        instance.setFileSyncService(builderForValue.build());
        return this;
      }
      /**
       * <code>optional .garmin_vivomovehr.FileSyncService file_sync_service = 43;</code>
       */
      public Builder mergeFileSyncService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiFileSyncService.FileSyncService value) {
        copyOnWrite();
        instance.mergeFileSyncService(value);
        return this;
      }
      /**
       * <code>optional .garmin_vivomovehr.FileSyncService file_sync_service = 43;</code>
       */
      public Builder clearFileSyncService() {  copyOnWrite();
        instance.clearFileSyncService();
        return this;
      }

      /**
       * <code>optional .garmin_vivomovehr.NotificationsService notifications_service = 49;</code>
       */
      @java.lang.Override
      public boolean hasNotificationsService() {
        return instance.hasNotificationsService();
      }
      /**
       * <code>optional .garmin_vivomovehr.NotificationsService notifications_service = 49;</code>
       */
      @java.lang.Override
      public nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiNotificationsService.NotificationsService getNotificationsService() {
        return instance.getNotificationsService();
      }
      /**
       * <code>optional .garmin_vivomovehr.NotificationsService notifications_service = 49;</code>
       */
      public Builder setNotificationsService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiNotificationsService.NotificationsService value) {
        copyOnWrite();
        instance.setNotificationsService(value);
        return this;
        }
      /**
       * <code>optional .garmin_vivomovehr.NotificationsService notifications_service = 49;</code>
       */
      public Builder setNotificationsService(
          nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiNotificationsService.NotificationsService.Builder builderForValue) {
        copyOnWrite();
        instance.setNotificationsService(builderForValue.build());
        return this;
      }
      /**
       * <code>optional .garmin_vivomovehr.NotificationsService notifications_service = 49;</code>
       */
      public Builder mergeNotificationsService(nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiNotificationsService.NotificationsService value) {
        copyOnWrite();
        instance.mergeNotificationsService(value);
        return this;
      }
      /**
       * <code>optional .garmin_vivomovehr.NotificationsService notifications_service = 49;</code>
       */
      public Builder clearNotificationsService() {  copyOnWrite();
        instance.clearNotificationsService();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:garmin_vivomovehr.Smart)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"ThrowNull"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmartProto.Smart();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "calendarService_",
              "httpService_",
              "installedAppsService_",
              "dataTransferService_",
              "deviceStatusService_",
              "findMyWatchService_",
              "coreService_",
              "smsNotificationService_",
              "authenticationService_",
              "ecgService_",
              "settingsService_",
              "fileSyncService_",
              "notificationsService_",
            };
            java.lang.String info =
                "\u0001\r\u0000\u0001\u00011\r\u0000\u0000\u0006\u0001\u1009\u0000\u0002\u1409\u0001" +
                "\u0003\u1409\u0002\u0007\u1409\u0003\b\u1009\u0004\f\u1409\u0005\r\u1409\u0006\u0010" +
                "\u1009\u0007\u001b\u1009\b\'\u1009\t*\u1409\n+\u1009\u000b1\u1009\f";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmartProto.Smart> parser = PARSER;
          if (parser == null) {
            synchronized (nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmartProto.Smart.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmartProto.Smart>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return memoizedIsInitialized;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
          return null;
        }
      }
      // Should never happen. Generates tight code to throw an exception.
      throw null;
    }


    // @@protoc_insertion_point(class_scope:garmin_vivomovehr.Smart)
    private static final nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmartProto.Smart DEFAULT_INSTANCE;
    static {
      Smart defaultInstance = new Smart();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Smart.class, defaultInstance);
    }

    public static nodomain.freeyourgadget.gadgetbridge.proto.garmin.GdiSmartProto.Smart getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Smart> PARSER;

    public static com.google.protobuf.Parser<Smart> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}

// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class ActivityNotificationPerAppSettingDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonDeleteSettings;

  @NonNull
  public final Button buttonSaveSettings;

  @NonNull
  public final Spinner spinnerLedType;

  @NonNull
  public final Spinner spinnerVibraCount;

  @NonNull
  public final Spinner spinnerVibraType;

  @NonNull
  public final TextView textViewLedColorTitle;

  @NonNull
  public final TextView textViewVibration;

  private ActivityNotificationPerAppSettingDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonDeleteSettings, @NonNull Button buttonSaveSettings,
      @NonNull Spinner spinnerLedType, @NonNull Spinner spinnerVibraCount,
      @NonNull Spinner spinnerVibraType, @NonNull TextView textViewLedColorTitle,
      @NonNull TextView textViewVibration) {
    this.rootView = rootView;
    this.buttonDeleteSettings = buttonDeleteSettings;
    this.buttonSaveSettings = buttonSaveSettings;
    this.spinnerLedType = spinnerLedType;
    this.spinnerVibraCount = spinnerVibraCount;
    this.spinnerVibraType = spinnerVibraType;
    this.textViewLedColorTitle = textViewLedColorTitle;
    this.textViewVibration = textViewVibration;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNotificationPerAppSettingDetailBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNotificationPerAppSettingDetailBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_notification_per_app_setting_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNotificationPerAppSettingDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonDeleteSettings;
      Button buttonDeleteSettings = ViewBindings.findChildViewById(rootView, id);
      if (buttonDeleteSettings == null) {
        break missingId;
      }

      id = R.id.buttonSaveSettings;
      Button buttonSaveSettings = ViewBindings.findChildViewById(rootView, id);
      if (buttonSaveSettings == null) {
        break missingId;
      }

      id = R.id.spinnerLedType;
      Spinner spinnerLedType = ViewBindings.findChildViewById(rootView, id);
      if (spinnerLedType == null) {
        break missingId;
      }

      id = R.id.spinnerVibraCount;
      Spinner spinnerVibraCount = ViewBindings.findChildViewById(rootView, id);
      if (spinnerVibraCount == null) {
        break missingId;
      }

      id = R.id.spinnerVibraType;
      Spinner spinnerVibraType = ViewBindings.findChildViewById(rootView, id);
      if (spinnerVibraType == null) {
        break missingId;
      }

      id = R.id.textViewLedColorTitle;
      TextView textViewLedColorTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewLedColorTitle == null) {
        break missingId;
      }

      id = R.id.textViewVibration;
      TextView textViewVibration = ViewBindings.findChildViewById(rootView, id);
      if (textViewVibration == null) {
        break missingId;
      }

      return new ActivityNotificationPerAppSettingDetailBinding((ConstraintLayout) rootView,
          buttonDeleteSettings, buttonSaveSettings, spinnerLedType, spinnerVibraCount,
          spinnerVibraType, textViewLedColorTitle, textViewVibration);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

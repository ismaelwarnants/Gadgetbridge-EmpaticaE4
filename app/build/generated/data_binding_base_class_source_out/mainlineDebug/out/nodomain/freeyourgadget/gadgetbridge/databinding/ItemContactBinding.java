// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class ItemContactBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialCardView cardContact;

  @NonNull
  public final TextView contactItemName;

  @NonNull
  public final TextView contactItemPhoneNumber;

  private ItemContactBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialCardView cardContact, @NonNull TextView contactItemName,
      @NonNull TextView contactItemPhoneNumber) {
    this.rootView = rootView;
    this.cardContact = cardContact;
    this.contactItemName = contactItemName;
    this.contactItemPhoneNumber = contactItemPhoneNumber;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemContactBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemContactBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_contact, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemContactBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_contact;
      MaterialCardView cardContact = ViewBindings.findChildViewById(rootView, id);
      if (cardContact == null) {
        break missingId;
      }

      id = R.id.contact_item_name;
      TextView contactItemName = ViewBindings.findChildViewById(rootView, id);
      if (contactItemName == null) {
        break missingId;
      }

      id = R.id.contact_item_phone_number;
      TextView contactItemPhoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (contactItemPhoneNumber == null) {
        break missingId;
      }

      return new ItemContactBinding((CoordinatorLayout) rootView, cardContact, contactItemName,
          contactItemPhoneNumber);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

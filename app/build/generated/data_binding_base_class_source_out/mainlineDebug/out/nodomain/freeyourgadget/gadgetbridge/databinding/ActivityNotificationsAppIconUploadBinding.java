// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class ActivityNotificationsAppIconUploadBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RecyclerView notificationsAppIconAppsList;

  @NonNull
  public final RelativeLayout notificationsAppIconAppsLoading;

  @NonNull
  public final TextView notificationsAppIconInfoText;

  @NonNull
  public final Button notificationsAppIconSendToDeviceButton;

  @NonNull
  public final SearchView notificationsAppIconSendToDeviceSearchView;

  private ActivityNotificationsAppIconUploadBinding(@NonNull RelativeLayout rootView,
      @NonNull RecyclerView notificationsAppIconAppsList,
      @NonNull RelativeLayout notificationsAppIconAppsLoading,
      @NonNull TextView notificationsAppIconInfoText,
      @NonNull Button notificationsAppIconSendToDeviceButton,
      @NonNull SearchView notificationsAppIconSendToDeviceSearchView) {
    this.rootView = rootView;
    this.notificationsAppIconAppsList = notificationsAppIconAppsList;
    this.notificationsAppIconAppsLoading = notificationsAppIconAppsLoading;
    this.notificationsAppIconInfoText = notificationsAppIconInfoText;
    this.notificationsAppIconSendToDeviceButton = notificationsAppIconSendToDeviceButton;
    this.notificationsAppIconSendToDeviceSearchView = notificationsAppIconSendToDeviceSearchView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNotificationsAppIconUploadBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNotificationsAppIconUploadBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_notifications_app_icon_upload, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNotificationsAppIconUploadBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.notifications_app_icon_apps_list;
      RecyclerView notificationsAppIconAppsList = ViewBindings.findChildViewById(rootView, id);
      if (notificationsAppIconAppsList == null) {
        break missingId;
      }

      id = R.id.notifications_app_icon_apps_loading;
      RelativeLayout notificationsAppIconAppsLoading = ViewBindings.findChildViewById(rootView, id);
      if (notificationsAppIconAppsLoading == null) {
        break missingId;
      }

      id = R.id.notifications_app_icon_info_text;
      TextView notificationsAppIconInfoText = ViewBindings.findChildViewById(rootView, id);
      if (notificationsAppIconInfoText == null) {
        break missingId;
      }

      id = R.id.notifications_app_icon_send_to_device_button;
      Button notificationsAppIconSendToDeviceButton = ViewBindings.findChildViewById(rootView, id);
      if (notificationsAppIconSendToDeviceButton == null) {
        break missingId;
      }

      id = R.id.notifications_app_icon_send_to_device_search_view;
      SearchView notificationsAppIconSendToDeviceSearchView = ViewBindings.findChildViewById(rootView, id);
      if (notificationsAppIconSendToDeviceSearchView == null) {
        break missingId;
      }

      return new ActivityNotificationsAppIconUploadBinding((RelativeLayout) rootView,
          notificationsAppIconAppsList, notificationsAppIconAppsLoading,
          notificationsAppIconInfoText, notificationsAppIconSendToDeviceButton,
          notificationsAppIconSendToDeviceSearchView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

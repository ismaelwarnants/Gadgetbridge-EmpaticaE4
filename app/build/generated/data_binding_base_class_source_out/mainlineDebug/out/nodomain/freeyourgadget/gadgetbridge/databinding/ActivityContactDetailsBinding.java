// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class ActivityContactDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialCardView cardContactName;

  @NonNull
  public final MaterialCardView cardContactNumber;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final EditText contactName;

  @NonNull
  public final EditText contactNumber;

  @NonNull
  public final FloatingActionButton fabSave;

  @NonNull
  public final TextView labelContactName;

  @NonNull
  public final TextView labelContactNumber;

  private ActivityContactDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialCardView cardContactName, @NonNull MaterialCardView cardContactNumber,
      @NonNull ConstraintLayout constraintLayout, @NonNull EditText contactName,
      @NonNull EditText contactNumber, @NonNull FloatingActionButton fabSave,
      @NonNull TextView labelContactName, @NonNull TextView labelContactNumber) {
    this.rootView = rootView;
    this.cardContactName = cardContactName;
    this.cardContactNumber = cardContactNumber;
    this.constraintLayout = constraintLayout;
    this.contactName = contactName;
    this.contactNumber = contactNumber;
    this.fabSave = fabSave;
    this.labelContactName = labelContactName;
    this.labelContactNumber = labelContactNumber;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityContactDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityContactDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_contact_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityContactDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_contact_name;
      MaterialCardView cardContactName = ViewBindings.findChildViewById(rootView, id);
      if (cardContactName == null) {
        break missingId;
      }

      id = R.id.card_contact_number;
      MaterialCardView cardContactNumber = ViewBindings.findChildViewById(rootView, id);
      if (cardContactNumber == null) {
        break missingId;
      }

      ConstraintLayout constraintLayout = (ConstraintLayout) rootView;

      id = R.id.contact_name;
      EditText contactName = ViewBindings.findChildViewById(rootView, id);
      if (contactName == null) {
        break missingId;
      }

      id = R.id.contact_number;
      EditText contactNumber = ViewBindings.findChildViewById(rootView, id);
      if (contactNumber == null) {
        break missingId;
      }

      id = R.id.fab_save;
      FloatingActionButton fabSave = ViewBindings.findChildViewById(rootView, id);
      if (fabSave == null) {
        break missingId;
      }

      id = R.id.label_contact_name;
      TextView labelContactName = ViewBindings.findChildViewById(rootView, id);
      if (labelContactName == null) {
        break missingId;
      }

      id = R.id.label_contact_number;
      TextView labelContactNumber = ViewBindings.findChildViewById(rootView, id);
      if (labelContactNumber == null) {
        break missingId;
      }

      return new ActivityContactDetailsBinding((ConstraintLayout) rootView, cardContactName,
          cardContactNumber, constraintLayout, contactName, contactNumber, fabSave,
          labelContactName, labelContactNumber);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

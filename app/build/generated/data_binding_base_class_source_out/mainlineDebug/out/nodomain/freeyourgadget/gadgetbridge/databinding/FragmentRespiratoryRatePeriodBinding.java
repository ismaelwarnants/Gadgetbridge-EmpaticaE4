// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.github.mikephil.charting.charts.LineChart;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class FragmentRespiratoryRatePeriodBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView awakeAvg;

  @NonNull
  public final LineChart respiratoryRateLineChart;

  @NonNull
  public final TextView rrDateView;

  @NonNull
  public final TextView sleepAvg;

  private FragmentRespiratoryRatePeriodBinding(@NonNull ScrollView rootView,
      @NonNull TextView awakeAvg, @NonNull LineChart respiratoryRateLineChart,
      @NonNull TextView rrDateView, @NonNull TextView sleepAvg) {
    this.rootView = rootView;
    this.awakeAvg = awakeAvg;
    this.respiratoryRateLineChart = respiratoryRateLineChart;
    this.rrDateView = rrDateView;
    this.sleepAvg = sleepAvg;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRespiratoryRatePeriodBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRespiratoryRatePeriodBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_respiratory_rate_period, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRespiratoryRatePeriodBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.awake_avg;
      TextView awakeAvg = ViewBindings.findChildViewById(rootView, id);
      if (awakeAvg == null) {
        break missingId;
      }

      id = R.id.respiratory_rate_line_chart;
      LineChart respiratoryRateLineChart = ViewBindings.findChildViewById(rootView, id);
      if (respiratoryRateLineChart == null) {
        break missingId;
      }

      id = R.id.rr_date_view;
      TextView rrDateView = ViewBindings.findChildViewById(rootView, id);
      if (rrDateView == null) {
        break missingId;
      }

      id = R.id.sleep_avg;
      TextView sleepAvg = ViewBindings.findChildViewById(rootView, id);
      if (sleepAvg == null) {
        break missingId;
      }

      return new FragmentRespiratoryRatePeriodBinding((ScrollView) rootView, awakeAvg,
          respiratoryRateLineChart, rrDateView, sleepAvg);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

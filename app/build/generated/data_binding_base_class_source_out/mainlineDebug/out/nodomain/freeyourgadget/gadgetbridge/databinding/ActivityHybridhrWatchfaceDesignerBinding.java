// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class ActivityHybridhrWatchfaceDesignerBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button buttonAddWidget;

  @NonNull
  public final Button buttonEditName;

  @NonNull
  public final Button buttonSetBackground;

  @NonNull
  public final Button buttonWatchfaceOpenMenuCompanion;

  @NonNull
  public final Button buttonWatchfaceResetMenuStructure;

  @NonNull
  public final Button buttonWatchfaceSettings;

  @NonNull
  public final MaterialCardView fossilMenuStructureHintContainer;

  @NonNull
  public final ImageView hybridhrBackgroundImage;

  @NonNull
  public final TextView textWatchfaceMenuStructure;

  @NonNull
  public final ImageView watchfaceInvertColors;

  @NonNull
  public final TextView watchfaceName;

  @NonNull
  public final RelativeLayout watchfaceNameLayout;

  @NonNull
  public final RelativeLayout watchfacePreviewLayout;

  @NonNull
  public final ImageView watchfaceRemoveImage;

  @NonNull
  public final ImageView watchfaceRotateLeft;

  @NonNull
  public final ImageView watchfaceRotateRight;

  @NonNull
  public final ProgressBar watchfaceUploadProgressBar;

  @NonNull
  public final ImageView watchfaceWidgetDeleteDroparea;

  @NonNull
  public final RelativeLayout watchfaceWidgetDeleteLayout;

  private ActivityHybridhrWatchfaceDesignerBinding(@NonNull ScrollView rootView,
      @NonNull Button buttonAddWidget, @NonNull Button buttonEditName,
      @NonNull Button buttonSetBackground, @NonNull Button buttonWatchfaceOpenMenuCompanion,
      @NonNull Button buttonWatchfaceResetMenuStructure, @NonNull Button buttonWatchfaceSettings,
      @NonNull MaterialCardView fossilMenuStructureHintContainer,
      @NonNull ImageView hybridhrBackgroundImage, @NonNull TextView textWatchfaceMenuStructure,
      @NonNull ImageView watchfaceInvertColors, @NonNull TextView watchfaceName,
      @NonNull RelativeLayout watchfaceNameLayout, @NonNull RelativeLayout watchfacePreviewLayout,
      @NonNull ImageView watchfaceRemoveImage, @NonNull ImageView watchfaceRotateLeft,
      @NonNull ImageView watchfaceRotateRight, @NonNull ProgressBar watchfaceUploadProgressBar,
      @NonNull ImageView watchfaceWidgetDeleteDroparea,
      @NonNull RelativeLayout watchfaceWidgetDeleteLayout) {
    this.rootView = rootView;
    this.buttonAddWidget = buttonAddWidget;
    this.buttonEditName = buttonEditName;
    this.buttonSetBackground = buttonSetBackground;
    this.buttonWatchfaceOpenMenuCompanion = buttonWatchfaceOpenMenuCompanion;
    this.buttonWatchfaceResetMenuStructure = buttonWatchfaceResetMenuStructure;
    this.buttonWatchfaceSettings = buttonWatchfaceSettings;
    this.fossilMenuStructureHintContainer = fossilMenuStructureHintContainer;
    this.hybridhrBackgroundImage = hybridhrBackgroundImage;
    this.textWatchfaceMenuStructure = textWatchfaceMenuStructure;
    this.watchfaceInvertColors = watchfaceInvertColors;
    this.watchfaceName = watchfaceName;
    this.watchfaceNameLayout = watchfaceNameLayout;
    this.watchfacePreviewLayout = watchfacePreviewLayout;
    this.watchfaceRemoveImage = watchfaceRemoveImage;
    this.watchfaceRotateLeft = watchfaceRotateLeft;
    this.watchfaceRotateRight = watchfaceRotateRight;
    this.watchfaceUploadProgressBar = watchfaceUploadProgressBar;
    this.watchfaceWidgetDeleteDroparea = watchfaceWidgetDeleteDroparea;
    this.watchfaceWidgetDeleteLayout = watchfaceWidgetDeleteLayout;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHybridhrWatchfaceDesignerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHybridhrWatchfaceDesignerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_hybridhr_watchface_designer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHybridhrWatchfaceDesignerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_add_widget;
      Button buttonAddWidget = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddWidget == null) {
        break missingId;
      }

      id = R.id.button_edit_name;
      Button buttonEditName = ViewBindings.findChildViewById(rootView, id);
      if (buttonEditName == null) {
        break missingId;
      }

      id = R.id.button_set_background;
      Button buttonSetBackground = ViewBindings.findChildViewById(rootView, id);
      if (buttonSetBackground == null) {
        break missingId;
      }

      id = R.id.button_watchface_open_menu_companion;
      Button buttonWatchfaceOpenMenuCompanion = ViewBindings.findChildViewById(rootView, id);
      if (buttonWatchfaceOpenMenuCompanion == null) {
        break missingId;
      }

      id = R.id.button_watchface_reset_menu_structure;
      Button buttonWatchfaceResetMenuStructure = ViewBindings.findChildViewById(rootView, id);
      if (buttonWatchfaceResetMenuStructure == null) {
        break missingId;
      }

      id = R.id.button_watchface_settings;
      Button buttonWatchfaceSettings = ViewBindings.findChildViewById(rootView, id);
      if (buttonWatchfaceSettings == null) {
        break missingId;
      }

      id = R.id.fossil_menu_structure_hint_container;
      MaterialCardView fossilMenuStructureHintContainer = ViewBindings.findChildViewById(rootView, id);
      if (fossilMenuStructureHintContainer == null) {
        break missingId;
      }

      id = R.id.hybridhr_background_image;
      ImageView hybridhrBackgroundImage = ViewBindings.findChildViewById(rootView, id);
      if (hybridhrBackgroundImage == null) {
        break missingId;
      }

      id = R.id.text_watchface_menu_structure;
      TextView textWatchfaceMenuStructure = ViewBindings.findChildViewById(rootView, id);
      if (textWatchfaceMenuStructure == null) {
        break missingId;
      }

      id = R.id.watchface_invert_colors;
      ImageView watchfaceInvertColors = ViewBindings.findChildViewById(rootView, id);
      if (watchfaceInvertColors == null) {
        break missingId;
      }

      id = R.id.watchface_name;
      TextView watchfaceName = ViewBindings.findChildViewById(rootView, id);
      if (watchfaceName == null) {
        break missingId;
      }

      id = R.id.watchface_name_layout;
      RelativeLayout watchfaceNameLayout = ViewBindings.findChildViewById(rootView, id);
      if (watchfaceNameLayout == null) {
        break missingId;
      }

      id = R.id.watchface_preview_layout;
      RelativeLayout watchfacePreviewLayout = ViewBindings.findChildViewById(rootView, id);
      if (watchfacePreviewLayout == null) {
        break missingId;
      }

      id = R.id.watchface_remove_image;
      ImageView watchfaceRemoveImage = ViewBindings.findChildViewById(rootView, id);
      if (watchfaceRemoveImage == null) {
        break missingId;
      }

      id = R.id.watchface_rotate_left;
      ImageView watchfaceRotateLeft = ViewBindings.findChildViewById(rootView, id);
      if (watchfaceRotateLeft == null) {
        break missingId;
      }

      id = R.id.watchface_rotate_right;
      ImageView watchfaceRotateRight = ViewBindings.findChildViewById(rootView, id);
      if (watchfaceRotateRight == null) {
        break missingId;
      }

      id = R.id.watchface_upload_progress_bar;
      ProgressBar watchfaceUploadProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (watchfaceUploadProgressBar == null) {
        break missingId;
      }

      id = R.id.watchface_widget_delete_droparea;
      ImageView watchfaceWidgetDeleteDroparea = ViewBindings.findChildViewById(rootView, id);
      if (watchfaceWidgetDeleteDroparea == null) {
        break missingId;
      }

      id = R.id.watchface_widget_delete_layout;
      RelativeLayout watchfaceWidgetDeleteLayout = ViewBindings.findChildViewById(rootView, id);
      if (watchfaceWidgetDeleteLayout == null) {
        break missingId;
      }

      return new ActivityHybridhrWatchfaceDesignerBinding((ScrollView) rootView, buttonAddWidget,
          buttonEditName, buttonSetBackground, buttonWatchfaceOpenMenuCompanion,
          buttonWatchfaceResetMenuStructure, buttonWatchfaceSettings,
          fossilMenuStructureHintContainer, hybridhrBackgroundImage, textWatchfaceMenuStructure,
          watchfaceInvertColors, watchfaceName, watchfaceNameLayout, watchfacePreviewLayout,
          watchfaceRemoveImage, watchfaceRotateLeft, watchfaceRotateRight,
          watchfaceUploadProgressBar, watchfaceWidgetDeleteDroparea, watchfaceWidgetDeleteLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

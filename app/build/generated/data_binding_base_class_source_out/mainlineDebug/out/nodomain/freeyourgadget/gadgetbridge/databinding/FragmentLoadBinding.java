// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.github.mikephil.charting.charts.BarChart;
import com.github.mikephil.charting.charts.LineChart;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class FragmentLoadBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView acuteLoad;

  @NonNull
  public final LineChart acuteLoadChart;

  @NonNull
  public final ImageView acuteLoadRatioGauge;

  @NonNull
  public final TextView acuteLoadRatioGaugeStatus;

  @NonNull
  public final TextView acuteLoadRatioGaugeValue;

  @NonNull
  public final TextView chronicLoad;

  @NonNull
  public final BarChart dailyLoadChart;

  @NonNull
  public final TextView dateView;

  @NonNull
  public final TextView lastWeekTotal;

  @NonNull
  public final TextView thisWeekTotal;

  @NonNull
  public final LinearLayout trainingLoadWrapper;

  private FragmentLoadBinding(@NonNull ScrollView rootView, @NonNull TextView acuteLoad,
      @NonNull LineChart acuteLoadChart, @NonNull ImageView acuteLoadRatioGauge,
      @NonNull TextView acuteLoadRatioGaugeStatus, @NonNull TextView acuteLoadRatioGaugeValue,
      @NonNull TextView chronicLoad, @NonNull BarChart dailyLoadChart, @NonNull TextView dateView,
      @NonNull TextView lastWeekTotal, @NonNull TextView thisWeekTotal,
      @NonNull LinearLayout trainingLoadWrapper) {
    this.rootView = rootView;
    this.acuteLoad = acuteLoad;
    this.acuteLoadChart = acuteLoadChart;
    this.acuteLoadRatioGauge = acuteLoadRatioGauge;
    this.acuteLoadRatioGaugeStatus = acuteLoadRatioGaugeStatus;
    this.acuteLoadRatioGaugeValue = acuteLoadRatioGaugeValue;
    this.chronicLoad = chronicLoad;
    this.dailyLoadChart = dailyLoadChart;
    this.dateView = dateView;
    this.lastWeekTotal = lastWeekTotal;
    this.thisWeekTotal = thisWeekTotal;
    this.trainingLoadWrapper = trainingLoadWrapper;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLoadBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLoadBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_load, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLoadBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.acute_load;
      TextView acuteLoad = ViewBindings.findChildViewById(rootView, id);
      if (acuteLoad == null) {
        break missingId;
      }

      id = R.id.acute_load_chart;
      LineChart acuteLoadChart = ViewBindings.findChildViewById(rootView, id);
      if (acuteLoadChart == null) {
        break missingId;
      }

      id = R.id.acute_load_ratio_gauge;
      ImageView acuteLoadRatioGauge = ViewBindings.findChildViewById(rootView, id);
      if (acuteLoadRatioGauge == null) {
        break missingId;
      }

      id = R.id.acute_load_ratio_gauge_status;
      TextView acuteLoadRatioGaugeStatus = ViewBindings.findChildViewById(rootView, id);
      if (acuteLoadRatioGaugeStatus == null) {
        break missingId;
      }

      id = R.id.acute_load_ratio_gauge_value;
      TextView acuteLoadRatioGaugeValue = ViewBindings.findChildViewById(rootView, id);
      if (acuteLoadRatioGaugeValue == null) {
        break missingId;
      }

      id = R.id.chronic_load;
      TextView chronicLoad = ViewBindings.findChildViewById(rootView, id);
      if (chronicLoad == null) {
        break missingId;
      }

      id = R.id.daily_load_chart;
      BarChart dailyLoadChart = ViewBindings.findChildViewById(rootView, id);
      if (dailyLoadChart == null) {
        break missingId;
      }

      id = R.id.date_view;
      TextView dateView = ViewBindings.findChildViewById(rootView, id);
      if (dateView == null) {
        break missingId;
      }

      id = R.id.last_week_total;
      TextView lastWeekTotal = ViewBindings.findChildViewById(rootView, id);
      if (lastWeekTotal == null) {
        break missingId;
      }

      id = R.id.this_week_total;
      TextView thisWeekTotal = ViewBindings.findChildViewById(rootView, id);
      if (thisWeekTotal == null) {
        break missingId;
      }

      id = R.id.training_load_wrapper;
      LinearLayout trainingLoadWrapper = ViewBindings.findChildViewById(rootView, id);
      if (trainingLoadWrapper == null) {
        break missingId;
      }

      return new FragmentLoadBinding((ScrollView) rootView, acuteLoad, acuteLoadChart,
          acuteLoadRatioGauge, acuteLoadRatioGaugeStatus, acuteLoadRatioGaugeValue, chronicLoad,
          dailyLoadChart, dateView, lastWeekTotal, thisWeekTotal, trainingLoadWrapper);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

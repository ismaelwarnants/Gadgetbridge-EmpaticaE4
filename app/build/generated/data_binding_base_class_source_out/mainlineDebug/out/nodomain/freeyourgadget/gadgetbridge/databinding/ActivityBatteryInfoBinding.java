// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class ActivityBatteryInfoBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final LinearLayout activityBatteryInfoBottomLayout;

  @NonNull
  public final ScrollView activityBatteryInfoLayout;

  @NonNull
  public final LinearLayout activityBatteryInfoMasterLayout;

  @NonNull
  public final LinearLayout activityBatteryInfoTopLayout;

  @NonNull
  public final FrameLayout batteryChartFragmentHolder;

  @NonNull
  public final TextView batteryStatusBatteryLevel;

  @NonNull
  public final TextView batteryStatusBatteryVoltage;

  @NonNull
  public final ImageView batteryStatusDeviceIcon;

  @NonNull
  public final TextView batteryStatusDeviceName;

  @NonNull
  public final TextView batteryStatusExtraName;

  private ActivityBatteryInfoBinding(@NonNull ScrollView rootView,
      @NonNull LinearLayout activityBatteryInfoBottomLayout,
      @NonNull ScrollView activityBatteryInfoLayout,
      @NonNull LinearLayout activityBatteryInfoMasterLayout,
      @NonNull LinearLayout activityBatteryInfoTopLayout,
      @NonNull FrameLayout batteryChartFragmentHolder, @NonNull TextView batteryStatusBatteryLevel,
      @NonNull TextView batteryStatusBatteryVoltage, @NonNull ImageView batteryStatusDeviceIcon,
      @NonNull TextView batteryStatusDeviceName, @NonNull TextView batteryStatusExtraName) {
    this.rootView = rootView;
    this.activityBatteryInfoBottomLayout = activityBatteryInfoBottomLayout;
    this.activityBatteryInfoLayout = activityBatteryInfoLayout;
    this.activityBatteryInfoMasterLayout = activityBatteryInfoMasterLayout;
    this.activityBatteryInfoTopLayout = activityBatteryInfoTopLayout;
    this.batteryChartFragmentHolder = batteryChartFragmentHolder;
    this.batteryStatusBatteryLevel = batteryStatusBatteryLevel;
    this.batteryStatusBatteryVoltage = batteryStatusBatteryVoltage;
    this.batteryStatusDeviceIcon = batteryStatusDeviceIcon;
    this.batteryStatusDeviceName = batteryStatusDeviceName;
    this.batteryStatusExtraName = batteryStatusExtraName;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBatteryInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBatteryInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_battery_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBatteryInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.activity_battery_info_bottom_layout;
      LinearLayout activityBatteryInfoBottomLayout = ViewBindings.findChildViewById(rootView, id);
      if (activityBatteryInfoBottomLayout == null) {
        break missingId;
      }

      ScrollView activityBatteryInfoLayout = (ScrollView) rootView;

      id = R.id.activity_battery_info_master_layout;
      LinearLayout activityBatteryInfoMasterLayout = ViewBindings.findChildViewById(rootView, id);
      if (activityBatteryInfoMasterLayout == null) {
        break missingId;
      }

      id = R.id.activity_battery_info_top_layout;
      LinearLayout activityBatteryInfoTopLayout = ViewBindings.findChildViewById(rootView, id);
      if (activityBatteryInfoTopLayout == null) {
        break missingId;
      }

      id = R.id.batteryChartFragmentHolder;
      FrameLayout batteryChartFragmentHolder = ViewBindings.findChildViewById(rootView, id);
      if (batteryChartFragmentHolder == null) {
        break missingId;
      }

      id = R.id.battery_status_battery_level;
      TextView batteryStatusBatteryLevel = ViewBindings.findChildViewById(rootView, id);
      if (batteryStatusBatteryLevel == null) {
        break missingId;
      }

      id = R.id.battery_status_battery_voltage;
      TextView batteryStatusBatteryVoltage = ViewBindings.findChildViewById(rootView, id);
      if (batteryStatusBatteryVoltage == null) {
        break missingId;
      }

      id = R.id.battery_status_device_icon;
      ImageView batteryStatusDeviceIcon = ViewBindings.findChildViewById(rootView, id);
      if (batteryStatusDeviceIcon == null) {
        break missingId;
      }

      id = R.id.battery_status_device_name;
      TextView batteryStatusDeviceName = ViewBindings.findChildViewById(rootView, id);
      if (batteryStatusDeviceName == null) {
        break missingId;
      }

      id = R.id.battery_status_extra_name;
      TextView batteryStatusExtraName = ViewBindings.findChildViewById(rootView, id);
      if (batteryStatusExtraName == null) {
        break missingId;
      }

      return new ActivityBatteryInfoBinding((ScrollView) rootView, activityBatteryInfoBottomLayout,
          activityBatteryInfoLayout, activityBatteryInfoMasterLayout, activityBatteryInfoTopLayout,
          batteryChartFragmentHolder, batteryStatusBatteryLevel, batteryStatusBatteryVoltage,
          batteryStatusDeviceIcon, batteryStatusDeviceName, batteryStatusExtraName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

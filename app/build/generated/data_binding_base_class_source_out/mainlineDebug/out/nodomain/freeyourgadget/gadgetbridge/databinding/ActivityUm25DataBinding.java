// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class ActivityUm25DataBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView um25CableResistance;

  @NonNull
  public final TextView um25TextChargeDuration;

  @NonNull
  public final TextView um25TextCurrent;

  @NonNull
  public final TextView um25TextCurrentSum;

  @NonNull
  public final TextView um25TextTemperature;

  @NonNull
  public final TextView um25TextVoltage;

  @NonNull
  public final TextView um25TextWattage;

  @NonNull
  public final TextView um25TextWattageSum;

  private ActivityUm25DataBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView um25CableResistance, @NonNull TextView um25TextChargeDuration,
      @NonNull TextView um25TextCurrent, @NonNull TextView um25TextCurrentSum,
      @NonNull TextView um25TextTemperature, @NonNull TextView um25TextVoltage,
      @NonNull TextView um25TextWattage, @NonNull TextView um25TextWattageSum) {
    this.rootView = rootView;
    this.um25CableResistance = um25CableResistance;
    this.um25TextChargeDuration = um25TextChargeDuration;
    this.um25TextCurrent = um25TextCurrent;
    this.um25TextCurrentSum = um25TextCurrentSum;
    this.um25TextTemperature = um25TextTemperature;
    this.um25TextVoltage = um25TextVoltage;
    this.um25TextWattage = um25TextWattage;
    this.um25TextWattageSum = um25TextWattageSum;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUm25DataBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUm25DataBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_um25_data, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUm25DataBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.um25_cable_resistance;
      TextView um25CableResistance = ViewBindings.findChildViewById(rootView, id);
      if (um25CableResistance == null) {
        break missingId;
      }

      id = R.id.um25_text_charge_duration;
      TextView um25TextChargeDuration = ViewBindings.findChildViewById(rootView, id);
      if (um25TextChargeDuration == null) {
        break missingId;
      }

      id = R.id.um25_text_current;
      TextView um25TextCurrent = ViewBindings.findChildViewById(rootView, id);
      if (um25TextCurrent == null) {
        break missingId;
      }

      id = R.id.um25_text_current_sum;
      TextView um25TextCurrentSum = ViewBindings.findChildViewById(rootView, id);
      if (um25TextCurrentSum == null) {
        break missingId;
      }

      id = R.id.um25_text_temperature;
      TextView um25TextTemperature = ViewBindings.findChildViewById(rootView, id);
      if (um25TextTemperature == null) {
        break missingId;
      }

      id = R.id.um25_text_voltage;
      TextView um25TextVoltage = ViewBindings.findChildViewById(rootView, id);
      if (um25TextVoltage == null) {
        break missingId;
      }

      id = R.id.um25_text_wattage;
      TextView um25TextWattage = ViewBindings.findChildViewById(rootView, id);
      if (um25TextWattage == null) {
        break missingId;
      }

      id = R.id.um25_text_wattage_sum;
      TextView um25TextWattageSum = ViewBindings.findChildViewById(rootView, id);
      if (um25TextWattageSum == null) {
        break missingId;
      }

      return new ActivityUm25DataBinding((ConstraintLayout) rootView, um25CableResistance,
          um25TextChargeDuration, um25TextCurrent, um25TextCurrentSum, um25TextTemperature,
          um25TextVoltage, um25TextWattage, um25TextWattageSum);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

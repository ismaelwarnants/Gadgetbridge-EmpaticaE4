// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;
import org.mapsforge.map.android.view.MapView;

public final class ActivityInstallerGpxBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button closeButton;

  @NonNull
  public final ListView detailsListView;

  @NonNull
  public final ImageView fwappStatusIcon;

  @NonNull
  public final MapView gpxMapView;

  @NonNull
  public final TextView infoTextView;

  @NonNull
  public final Button installButton;

  @NonNull
  public final ProgressBar installProgressBar;

  @NonNull
  public final TextView installProgressText;

  @NonNull
  public final ListView itemListView;

  @NonNull
  public final ImageView previewImage;

  @NonNull
  public final TextInputEditText trackNameEditText;

  @NonNull
  public final TextInputLayout trackNameInputLayout;

  private ActivityInstallerGpxBinding(@NonNull ScrollView rootView, @NonNull Button closeButton,
      @NonNull ListView detailsListView, @NonNull ImageView fwappStatusIcon,
      @NonNull MapView gpxMapView, @NonNull TextView infoTextView, @NonNull Button installButton,
      @NonNull ProgressBar installProgressBar, @NonNull TextView installProgressText,
      @NonNull ListView itemListView, @NonNull ImageView previewImage,
      @NonNull TextInputEditText trackNameEditText, @NonNull TextInputLayout trackNameInputLayout) {
    this.rootView = rootView;
    this.closeButton = closeButton;
    this.detailsListView = detailsListView;
    this.fwappStatusIcon = fwappStatusIcon;
    this.gpxMapView = gpxMapView;
    this.infoTextView = infoTextView;
    this.installButton = installButton;
    this.installProgressBar = installProgressBar;
    this.installProgressText = installProgressText;
    this.itemListView = itemListView;
    this.previewImage = previewImage;
    this.trackNameEditText = trackNameEditText;
    this.trackNameInputLayout = trackNameInputLayout;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityInstallerGpxBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityInstallerGpxBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_installer_gpx, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityInstallerGpxBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.closeButton;
      Button closeButton = ViewBindings.findChildViewById(rootView, id);
      if (closeButton == null) {
        break missingId;
      }

      id = R.id.detailsListView;
      ListView detailsListView = ViewBindings.findChildViewById(rootView, id);
      if (detailsListView == null) {
        break missingId;
      }

      id = R.id.fwappStatusIcon;
      ImageView fwappStatusIcon = ViewBindings.findChildViewById(rootView, id);
      if (fwappStatusIcon == null) {
        break missingId;
      }

      id = R.id.gpx_map_view;
      MapView gpxMapView = ViewBindings.findChildViewById(rootView, id);
      if (gpxMapView == null) {
        break missingId;
      }

      id = R.id.infoTextView;
      TextView infoTextView = ViewBindings.findChildViewById(rootView, id);
      if (infoTextView == null) {
        break missingId;
      }

      id = R.id.installButton;
      Button installButton = ViewBindings.findChildViewById(rootView, id);
      if (installButton == null) {
        break missingId;
      }

      id = R.id.installProgressBar;
      ProgressBar installProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (installProgressBar == null) {
        break missingId;
      }

      id = R.id.installProgressText;
      TextView installProgressText = ViewBindings.findChildViewById(rootView, id);
      if (installProgressText == null) {
        break missingId;
      }

      id = R.id.itemListView;
      ListView itemListView = ViewBindings.findChildViewById(rootView, id);
      if (itemListView == null) {
        break missingId;
      }

      id = R.id.previewImage;
      ImageView previewImage = ViewBindings.findChildViewById(rootView, id);
      if (previewImage == null) {
        break missingId;
      }

      id = R.id.track_name_edit_text;
      TextInputEditText trackNameEditText = ViewBindings.findChildViewById(rootView, id);
      if (trackNameEditText == null) {
        break missingId;
      }

      id = R.id.track_name_input_layout;
      TextInputLayout trackNameInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (trackNameInputLayout == null) {
        break missingId;
      }

      return new ActivityInstallerGpxBinding((ScrollView) rootView, closeButton, detailsListView,
          fwappStatusIcon, gpxMapView, infoTextView, installButton, installProgressBar,
          installProgressText, itemListView, previewImage, trackNameEditText, trackNameInputLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

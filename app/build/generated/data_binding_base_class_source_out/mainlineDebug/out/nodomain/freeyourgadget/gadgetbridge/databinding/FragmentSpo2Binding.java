// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.github.mikephil.charting.charts.LineChart;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class FragmentSpo2Binding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView dateView;

  @NonNull
  public final LinearLayout manualMeasurements;

  @NonNull
  public final LinearLayout manualMeasurementsList;

  @NonNull
  public final TextView spo2Average;

  @NonNull
  public final LineChart spo2LineChart;

  @NonNull
  public final TextView spo2Maximum;

  @NonNull
  public final TextView spo2Minimum;

  @NonNull
  public final TextView titleText;

  private FragmentSpo2Binding(@NonNull ScrollView rootView, @NonNull TextView dateView,
      @NonNull LinearLayout manualMeasurements, @NonNull LinearLayout manualMeasurementsList,
      @NonNull TextView spo2Average, @NonNull LineChart spo2LineChart,
      @NonNull TextView spo2Maximum, @NonNull TextView spo2Minimum, @NonNull TextView titleText) {
    this.rootView = rootView;
    this.dateView = dateView;
    this.manualMeasurements = manualMeasurements;
    this.manualMeasurementsList = manualMeasurementsList;
    this.spo2Average = spo2Average;
    this.spo2LineChart = spo2LineChart;
    this.spo2Maximum = spo2Maximum;
    this.spo2Minimum = spo2Minimum;
    this.titleText = titleText;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSpo2Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSpo2Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_spo2, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSpo2Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.date_view;
      TextView dateView = ViewBindings.findChildViewById(rootView, id);
      if (dateView == null) {
        break missingId;
      }

      id = R.id.manualMeasurements;
      LinearLayout manualMeasurements = ViewBindings.findChildViewById(rootView, id);
      if (manualMeasurements == null) {
        break missingId;
      }

      id = R.id.manualMeasurementsList;
      LinearLayout manualMeasurementsList = ViewBindings.findChildViewById(rootView, id);
      if (manualMeasurementsList == null) {
        break missingId;
      }

      id = R.id.spo2_average;
      TextView spo2Average = ViewBindings.findChildViewById(rootView, id);
      if (spo2Average == null) {
        break missingId;
      }

      id = R.id.spo2_line_chart;
      LineChart spo2LineChart = ViewBindings.findChildViewById(rootView, id);
      if (spo2LineChart == null) {
        break missingId;
      }

      id = R.id.spo2_maximum;
      TextView spo2Maximum = ViewBindings.findChildViewById(rootView, id);
      if (spo2Maximum == null) {
        break missingId;
      }

      id = R.id.spo2_minimum;
      TextView spo2Minimum = ViewBindings.findChildViewById(rootView, id);
      if (spo2Minimum == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      return new FragmentSpo2Binding((ScrollView) rootView, dateView, manualMeasurements,
          manualMeasurementsList, spo2Average, spo2LineChart, spo2Maximum, spo2Minimum, titleText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

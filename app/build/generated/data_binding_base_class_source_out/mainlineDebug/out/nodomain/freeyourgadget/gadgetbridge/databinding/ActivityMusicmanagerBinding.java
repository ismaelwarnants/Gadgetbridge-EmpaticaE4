// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class ActivityMusicmanagerBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final MaterialToolbar bottomToolbar;

  @NonNull
  public final FloatingActionButton fabMusicPlaylistAdd;

  @NonNull
  public final FloatingActionButton fabMusicUpload;

  @NonNull
  public final ImageButton musicCancelSelection;

  @NonNull
  public final TextView musicDeviceInfo;

  @NonNull
  public final RelativeLayout musicLoading;

  @NonNull
  public final ImageButton musicMultiselectAddToPlaylist;

  @NonNull
  public final ImageButton musicMultiselectDelete;

  @NonNull
  public final ImageButton musicPlaylistDelete;

  @NonNull
  public final ImageButton musicPlaylistRename;

  @NonNull
  public final Spinner musicPlaylists;

  @NonNull
  public final LinearLayout musicPlaylistsLayout;

  @NonNull
  public final TextView musicSelectionInfo;

  @NonNull
  public final RecyclerView musicSongsList;

  private ActivityMusicmanagerBinding(@NonNull RelativeLayout rootView,
      @NonNull MaterialToolbar bottomToolbar, @NonNull FloatingActionButton fabMusicPlaylistAdd,
      @NonNull FloatingActionButton fabMusicUpload, @NonNull ImageButton musicCancelSelection,
      @NonNull TextView musicDeviceInfo, @NonNull RelativeLayout musicLoading,
      @NonNull ImageButton musicMultiselectAddToPlaylist,
      @NonNull ImageButton musicMultiselectDelete, @NonNull ImageButton musicPlaylistDelete,
      @NonNull ImageButton musicPlaylistRename, @NonNull Spinner musicPlaylists,
      @NonNull LinearLayout musicPlaylistsLayout, @NonNull TextView musicSelectionInfo,
      @NonNull RecyclerView musicSongsList) {
    this.rootView = rootView;
    this.bottomToolbar = bottomToolbar;
    this.fabMusicPlaylistAdd = fabMusicPlaylistAdd;
    this.fabMusicUpload = fabMusicUpload;
    this.musicCancelSelection = musicCancelSelection;
    this.musicDeviceInfo = musicDeviceInfo;
    this.musicLoading = musicLoading;
    this.musicMultiselectAddToPlaylist = musicMultiselectAddToPlaylist;
    this.musicMultiselectDelete = musicMultiselectDelete;
    this.musicPlaylistDelete = musicPlaylistDelete;
    this.musicPlaylistRename = musicPlaylistRename;
    this.musicPlaylists = musicPlaylists;
    this.musicPlaylistsLayout = musicPlaylistsLayout;
    this.musicSelectionInfo = musicSelectionInfo;
    this.musicSongsList = musicSongsList;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMusicmanagerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMusicmanagerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_musicmanager, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMusicmanagerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_toolbar;
      MaterialToolbar bottomToolbar = ViewBindings.findChildViewById(rootView, id);
      if (bottomToolbar == null) {
        break missingId;
      }

      id = R.id.fab_music_playlist_add;
      FloatingActionButton fabMusicPlaylistAdd = ViewBindings.findChildViewById(rootView, id);
      if (fabMusicPlaylistAdd == null) {
        break missingId;
      }

      id = R.id.fab_music_upload;
      FloatingActionButton fabMusicUpload = ViewBindings.findChildViewById(rootView, id);
      if (fabMusicUpload == null) {
        break missingId;
      }

      id = R.id.music_cancel_selection;
      ImageButton musicCancelSelection = ViewBindings.findChildViewById(rootView, id);
      if (musicCancelSelection == null) {
        break missingId;
      }

      id = R.id.music_device_info;
      TextView musicDeviceInfo = ViewBindings.findChildViewById(rootView, id);
      if (musicDeviceInfo == null) {
        break missingId;
      }

      id = R.id.music_loading;
      RelativeLayout musicLoading = ViewBindings.findChildViewById(rootView, id);
      if (musicLoading == null) {
        break missingId;
      }

      id = R.id.music_multiselect_add_to_playlist;
      ImageButton musicMultiselectAddToPlaylist = ViewBindings.findChildViewById(rootView, id);
      if (musicMultiselectAddToPlaylist == null) {
        break missingId;
      }

      id = R.id.music_multiselect_delete;
      ImageButton musicMultiselectDelete = ViewBindings.findChildViewById(rootView, id);
      if (musicMultiselectDelete == null) {
        break missingId;
      }

      id = R.id.music_playlist_delete;
      ImageButton musicPlaylistDelete = ViewBindings.findChildViewById(rootView, id);
      if (musicPlaylistDelete == null) {
        break missingId;
      }

      id = R.id.music_playlist_rename;
      ImageButton musicPlaylistRename = ViewBindings.findChildViewById(rootView, id);
      if (musicPlaylistRename == null) {
        break missingId;
      }

      id = R.id.music_playlists;
      Spinner musicPlaylists = ViewBindings.findChildViewById(rootView, id);
      if (musicPlaylists == null) {
        break missingId;
      }

      id = R.id.music_playlists_layout;
      LinearLayout musicPlaylistsLayout = ViewBindings.findChildViewById(rootView, id);
      if (musicPlaylistsLayout == null) {
        break missingId;
      }

      id = R.id.music_selection_info;
      TextView musicSelectionInfo = ViewBindings.findChildViewById(rootView, id);
      if (musicSelectionInfo == null) {
        break missingId;
      }

      id = R.id.music_songs_list;
      RecyclerView musicSongsList = ViewBindings.findChildViewById(rootView, id);
      if (musicSongsList == null) {
        break missingId;
      }

      return new ActivityMusicmanagerBinding((RelativeLayout) rootView, bottomToolbar,
          fabMusicPlaylistAdd, fabMusicUpload, musicCancelSelection, musicDeviceInfo, musicLoading,
          musicMultiselectAddToPlaylist, musicMultiselectDelete, musicPlaylistDelete,
          musicPlaylistRename, musicPlaylists, musicPlaylistsLayout, musicSelectionInfo,
          musicSongsList);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

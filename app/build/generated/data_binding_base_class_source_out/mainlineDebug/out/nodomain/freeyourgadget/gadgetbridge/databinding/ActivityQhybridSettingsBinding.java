// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class ActivityQhybridSettingsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout buttonConfigLayout;

  @NonNull
  public final Button buttonOverwriteButtons;

  @NonNull
  public final CheckBox checkBoxUserActivityHand;

  @NonNull
  public final ListView qhybridAppList;

  @NonNull
  public final RelativeLayout qhybridMain;

  @NonNull
  public final TextView qhybridTimeOffset;

  @NonNull
  public final TextView settingsErrorText;

  @NonNull
  public final LinearLayout settingsLayout;

  @NonNull
  public final EditText stepGoalEt;

  @NonNull
  public final TextView timezoneOffset;

  @NonNull
  public final SeekBar vibrationStrengthBar;

  @NonNull
  public final LinearLayout vibrationStrengthLayout;

  private ActivityQhybridSettingsBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout buttonConfigLayout, @NonNull Button buttonOverwriteButtons,
      @NonNull CheckBox checkBoxUserActivityHand, @NonNull ListView qhybridAppList,
      @NonNull RelativeLayout qhybridMain, @NonNull TextView qhybridTimeOffset,
      @NonNull TextView settingsErrorText, @NonNull LinearLayout settingsLayout,
      @NonNull EditText stepGoalEt, @NonNull TextView timezoneOffset,
      @NonNull SeekBar vibrationStrengthBar, @NonNull LinearLayout vibrationStrengthLayout) {
    this.rootView = rootView;
    this.buttonConfigLayout = buttonConfigLayout;
    this.buttonOverwriteButtons = buttonOverwriteButtons;
    this.checkBoxUserActivityHand = checkBoxUserActivityHand;
    this.qhybridAppList = qhybridAppList;
    this.qhybridMain = qhybridMain;
    this.qhybridTimeOffset = qhybridTimeOffset;
    this.settingsErrorText = settingsErrorText;
    this.settingsLayout = settingsLayout;
    this.stepGoalEt = stepGoalEt;
    this.timezoneOffset = timezoneOffset;
    this.vibrationStrengthBar = vibrationStrengthBar;
    this.vibrationStrengthLayout = vibrationStrengthLayout;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityQhybridSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityQhybridSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_qhybrid_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityQhybridSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonConfigLayout;
      LinearLayout buttonConfigLayout = ViewBindings.findChildViewById(rootView, id);
      if (buttonConfigLayout == null) {
        break missingId;
      }

      id = R.id.buttonOverwriteButtons;
      Button buttonOverwriteButtons = ViewBindings.findChildViewById(rootView, id);
      if (buttonOverwriteButtons == null) {
        break missingId;
      }

      id = R.id.checkBoxUserActivityHand;
      CheckBox checkBoxUserActivityHand = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxUserActivityHand == null) {
        break missingId;
      }

      id = R.id.qhybrid_appList;
      ListView qhybridAppList = ViewBindings.findChildViewById(rootView, id);
      if (qhybridAppList == null) {
        break missingId;
      }

      RelativeLayout qhybridMain = (RelativeLayout) rootView;

      id = R.id.qhybridTimeOffset;
      TextView qhybridTimeOffset = ViewBindings.findChildViewById(rootView, id);
      if (qhybridTimeOffset == null) {
        break missingId;
      }

      id = R.id.settingsErrorText;
      TextView settingsErrorText = ViewBindings.findChildViewById(rootView, id);
      if (settingsErrorText == null) {
        break missingId;
      }

      id = R.id.settingsLayout;
      LinearLayout settingsLayout = ViewBindings.findChildViewById(rootView, id);
      if (settingsLayout == null) {
        break missingId;
      }

      id = R.id.stepGoalEt;
      EditText stepGoalEt = ViewBindings.findChildViewById(rootView, id);
      if (stepGoalEt == null) {
        break missingId;
      }

      id = R.id.timezoneOffset;
      TextView timezoneOffset = ViewBindings.findChildViewById(rootView, id);
      if (timezoneOffset == null) {
        break missingId;
      }

      id = R.id.vibrationStrengthBar;
      SeekBar vibrationStrengthBar = ViewBindings.findChildViewById(rootView, id);
      if (vibrationStrengthBar == null) {
        break missingId;
      }

      id = R.id.vibrationStrengthLayout;
      LinearLayout vibrationStrengthLayout = ViewBindings.findChildViewById(rootView, id);
      if (vibrationStrengthLayout == null) {
        break missingId;
      }

      return new ActivityQhybridSettingsBinding((RelativeLayout) rootView, buttonConfigLayout,
          buttonOverwriteButtons, checkBoxUserActivityHand, qhybridAppList, qhybridMain,
          qhybridTimeOffset, settingsErrorText, settingsLayout, stepGoalEt, timezoneOffset,
          vibrationStrengthBar, vibrationStrengthLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

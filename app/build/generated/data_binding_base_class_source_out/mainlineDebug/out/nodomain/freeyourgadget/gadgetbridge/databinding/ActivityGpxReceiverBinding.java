// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class ActivityGpxReceiverBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button gpxReceiverCancel;

  @NonNull
  public final TextView gpxReceiverFilesListing;

  @NonNull
  public final Button gpxReceiverOk;

  @NonNull
  public final TextView gpxReceiverOverwriteLabel;

  @NonNull
  public final LinearLayout gpxReceiverOverwriteLayout;

  @NonNull
  public final TextView gpxReceiverReceivedLabel;

  private ActivityGpxReceiverBinding(@NonNull LinearLayout rootView,
      @NonNull Button gpxReceiverCancel, @NonNull TextView gpxReceiverFilesListing,
      @NonNull Button gpxReceiverOk, @NonNull TextView gpxReceiverOverwriteLabel,
      @NonNull LinearLayout gpxReceiverOverwriteLayout,
      @NonNull TextView gpxReceiverReceivedLabel) {
    this.rootView = rootView;
    this.gpxReceiverCancel = gpxReceiverCancel;
    this.gpxReceiverFilesListing = gpxReceiverFilesListing;
    this.gpxReceiverOk = gpxReceiverOk;
    this.gpxReceiverOverwriteLabel = gpxReceiverOverwriteLabel;
    this.gpxReceiverOverwriteLayout = gpxReceiverOverwriteLayout;
    this.gpxReceiverReceivedLabel = gpxReceiverReceivedLabel;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGpxReceiverBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGpxReceiverBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_gpx_receiver, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGpxReceiverBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.gpx_receiver_cancel;
      Button gpxReceiverCancel = ViewBindings.findChildViewById(rootView, id);
      if (gpxReceiverCancel == null) {
        break missingId;
      }

      id = R.id.gpx_receiver_files_listing;
      TextView gpxReceiverFilesListing = ViewBindings.findChildViewById(rootView, id);
      if (gpxReceiverFilesListing == null) {
        break missingId;
      }

      id = R.id.gpx_receiver_ok;
      Button gpxReceiverOk = ViewBindings.findChildViewById(rootView, id);
      if (gpxReceiverOk == null) {
        break missingId;
      }

      id = R.id.gpx_receiver_overwrite_label;
      TextView gpxReceiverOverwriteLabel = ViewBindings.findChildViewById(rootView, id);
      if (gpxReceiverOverwriteLabel == null) {
        break missingId;
      }

      id = R.id.gpx_receiver_overwrite_layout;
      LinearLayout gpxReceiverOverwriteLayout = ViewBindings.findChildViewById(rootView, id);
      if (gpxReceiverOverwriteLayout == null) {
        break missingId;
      }

      id = R.id.gpx_receiver_received_label;
      TextView gpxReceiverReceivedLabel = ViewBindings.findChildViewById(rootView, id);
      if (gpxReceiverReceivedLabel == null) {
        break missingId;
      }

      return new ActivityGpxReceiverBinding((LinearLayout) rootView, gpxReceiverCancel,
          gpxReceiverFilesListing, gpxReceiverOk, gpxReceiverOverwriteLabel,
          gpxReceiverOverwriteLayout, gpxReceiverReceivedLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

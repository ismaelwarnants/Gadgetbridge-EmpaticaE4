// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.NumberPicker;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class ActivityWatchxplusCalibrationBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final NumberPicker npHour;

  @NonNull
  public final NumberPicker npMinute;

  @NonNull
  public final NumberPicker npSecond;

  @NonNull
  public final TextView tvHint;

  @NonNull
  public final TextView tvNote;

  @NonNull
  public final Button watch9BtCalibrate;

  private ActivityWatchxplusCalibrationBinding(@NonNull RelativeLayout rootView,
      @NonNull NumberPicker npHour, @NonNull NumberPicker npMinute, @NonNull NumberPicker npSecond,
      @NonNull TextView tvHint, @NonNull TextView tvNote, @NonNull Button watch9BtCalibrate) {
    this.rootView = rootView;
    this.npHour = npHour;
    this.npMinute = npMinute;
    this.npSecond = npSecond;
    this.tvHint = tvHint;
    this.tvNote = tvNote;
    this.watch9BtCalibrate = watch9BtCalibrate;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWatchxplusCalibrationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWatchxplusCalibrationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_watchxplus_calibration, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWatchxplusCalibrationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.np_hour;
      NumberPicker npHour = ViewBindings.findChildViewById(rootView, id);
      if (npHour == null) {
        break missingId;
      }

      id = R.id.np_minute;
      NumberPicker npMinute = ViewBindings.findChildViewById(rootView, id);
      if (npMinute == null) {
        break missingId;
      }

      id = R.id.np_second;
      NumberPicker npSecond = ViewBindings.findChildViewById(rootView, id);
      if (npSecond == null) {
        break missingId;
      }

      id = R.id.tv_hint;
      TextView tvHint = ViewBindings.findChildViewById(rootView, id);
      if (tvHint == null) {
        break missingId;
      }

      id = R.id.tv_note;
      TextView tvNote = ViewBindings.findChildViewById(rootView, id);
      if (tvNote == null) {
        break missingId;
      }

      id = R.id.watch9_bt_calibrate;
      Button watch9BtCalibrate = ViewBindings.findChildViewById(rootView, id);
      if (watch9BtCalibrate == null) {
        break missingId;
      }

      return new ActivityWatchxplusCalibrationBinding((RelativeLayout) rootView, npHour, npMinute,
          npSecond, tvHint, tvNote, watch9BtCalibrate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

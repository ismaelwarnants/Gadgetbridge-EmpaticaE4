// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.github.mikephil.charting.charts.LineChart;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class FragmentHrvStatusBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final RelativeLayout hrvGauge;

  @NonNull
  public final TextView hrvGaugeStatus;

  @NonNull
  public final TextView hrvGaugeValue;

  @NonNull
  public final TextView hrvStatusBaseline;

  @NonNull
  public final LinearLayout hrvStatusBaselineWrapper;

  @NonNull
  public final TextView hrvStatusDateView;

  @NonNull
  public final TextView hrvStatusDayAvg;

  @NonNull
  public final LinearLayout hrvStatusDayAvgWrapper;

  @NonNull
  public final ImageView hrvStatusGaugeBar;

  @NonNull
  public final TextView hrvStatusLastNight;

  @NonNull
  public final TextView hrvStatusLastNightHighest5;

  @NonNull
  public final LinearLayout hrvStatusLastNightHighest5Wrapper;

  @NonNull
  public final TextView hrvStatusSevenDaysAvg;

  @NonNull
  public final TextView hrvStatusSevenDaysAvgRate;

  @NonNull
  public final LineChart hrvWeeklyLineChart;

  @NonNull
  public final LinearLayout sleepChartLegendRemTimeWrapper;

  private FragmentHrvStatusBinding(@NonNull ScrollView rootView, @NonNull RelativeLayout hrvGauge,
      @NonNull TextView hrvGaugeStatus, @NonNull TextView hrvGaugeValue,
      @NonNull TextView hrvStatusBaseline, @NonNull LinearLayout hrvStatusBaselineWrapper,
      @NonNull TextView hrvStatusDateView, @NonNull TextView hrvStatusDayAvg,
      @NonNull LinearLayout hrvStatusDayAvgWrapper, @NonNull ImageView hrvStatusGaugeBar,
      @NonNull TextView hrvStatusLastNight, @NonNull TextView hrvStatusLastNightHighest5,
      @NonNull LinearLayout hrvStatusLastNightHighest5Wrapper,
      @NonNull TextView hrvStatusSevenDaysAvg, @NonNull TextView hrvStatusSevenDaysAvgRate,
      @NonNull LineChart hrvWeeklyLineChart, @NonNull LinearLayout sleepChartLegendRemTimeWrapper) {
    this.rootView = rootView;
    this.hrvGauge = hrvGauge;
    this.hrvGaugeStatus = hrvGaugeStatus;
    this.hrvGaugeValue = hrvGaugeValue;
    this.hrvStatusBaseline = hrvStatusBaseline;
    this.hrvStatusBaselineWrapper = hrvStatusBaselineWrapper;
    this.hrvStatusDateView = hrvStatusDateView;
    this.hrvStatusDayAvg = hrvStatusDayAvg;
    this.hrvStatusDayAvgWrapper = hrvStatusDayAvgWrapper;
    this.hrvStatusGaugeBar = hrvStatusGaugeBar;
    this.hrvStatusLastNight = hrvStatusLastNight;
    this.hrvStatusLastNightHighest5 = hrvStatusLastNightHighest5;
    this.hrvStatusLastNightHighest5Wrapper = hrvStatusLastNightHighest5Wrapper;
    this.hrvStatusSevenDaysAvg = hrvStatusSevenDaysAvg;
    this.hrvStatusSevenDaysAvgRate = hrvStatusSevenDaysAvgRate;
    this.hrvWeeklyLineChart = hrvWeeklyLineChart;
    this.sleepChartLegendRemTimeWrapper = sleepChartLegendRemTimeWrapper;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHrvStatusBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHrvStatusBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_hrv_status, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHrvStatusBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.hrv_gauge;
      RelativeLayout hrvGauge = ViewBindings.findChildViewById(rootView, id);
      if (hrvGauge == null) {
        break missingId;
      }

      id = R.id.hrv_gauge_status;
      TextView hrvGaugeStatus = ViewBindings.findChildViewById(rootView, id);
      if (hrvGaugeStatus == null) {
        break missingId;
      }

      id = R.id.hrv_gauge_value;
      TextView hrvGaugeValue = ViewBindings.findChildViewById(rootView, id);
      if (hrvGaugeValue == null) {
        break missingId;
      }

      id = R.id.hrv_status_baseline;
      TextView hrvStatusBaseline = ViewBindings.findChildViewById(rootView, id);
      if (hrvStatusBaseline == null) {
        break missingId;
      }

      id = R.id.hrv_status_baseline_wrapper;
      LinearLayout hrvStatusBaselineWrapper = ViewBindings.findChildViewById(rootView, id);
      if (hrvStatusBaselineWrapper == null) {
        break missingId;
      }

      id = R.id.hrv_status_date_view;
      TextView hrvStatusDateView = ViewBindings.findChildViewById(rootView, id);
      if (hrvStatusDateView == null) {
        break missingId;
      }

      id = R.id.hrv_status_day_avg;
      TextView hrvStatusDayAvg = ViewBindings.findChildViewById(rootView, id);
      if (hrvStatusDayAvg == null) {
        break missingId;
      }

      id = R.id.hrv_status_day_avg_wrapper;
      LinearLayout hrvStatusDayAvgWrapper = ViewBindings.findChildViewById(rootView, id);
      if (hrvStatusDayAvgWrapper == null) {
        break missingId;
      }

      id = R.id.hrv_status_gauge_bar;
      ImageView hrvStatusGaugeBar = ViewBindings.findChildViewById(rootView, id);
      if (hrvStatusGaugeBar == null) {
        break missingId;
      }

      id = R.id.hrv_status_last_night;
      TextView hrvStatusLastNight = ViewBindings.findChildViewById(rootView, id);
      if (hrvStatusLastNight == null) {
        break missingId;
      }

      id = R.id.hrv_status_last_night_highest_5;
      TextView hrvStatusLastNightHighest5 = ViewBindings.findChildViewById(rootView, id);
      if (hrvStatusLastNightHighest5 == null) {
        break missingId;
      }

      id = R.id.hrv_status_last_night_highest_5_wrapper;
      LinearLayout hrvStatusLastNightHighest5Wrapper = ViewBindings.findChildViewById(rootView, id);
      if (hrvStatusLastNightHighest5Wrapper == null) {
        break missingId;
      }

      id = R.id.hrv_status_seven_days_avg;
      TextView hrvStatusSevenDaysAvg = ViewBindings.findChildViewById(rootView, id);
      if (hrvStatusSevenDaysAvg == null) {
        break missingId;
      }

      id = R.id.hrv_status_seven_days_avg_rate;
      TextView hrvStatusSevenDaysAvgRate = ViewBindings.findChildViewById(rootView, id);
      if (hrvStatusSevenDaysAvgRate == null) {
        break missingId;
      }

      id = R.id.hrv_weekly_line_chart;
      LineChart hrvWeeklyLineChart = ViewBindings.findChildViewById(rootView, id);
      if (hrvWeeklyLineChart == null) {
        break missingId;
      }

      id = R.id.sleep_chart_legend_rem_time_wrapper;
      LinearLayout sleepChartLegendRemTimeWrapper = ViewBindings.findChildViewById(rootView, id);
      if (sleepChartLegendRemTimeWrapper == null) {
        break missingId;
      }

      return new FragmentHrvStatusBinding((ScrollView) rootView, hrvGauge, hrvGaugeStatus,
          hrvGaugeValue, hrvStatusBaseline, hrvStatusBaselineWrapper, hrvStatusDateView,
          hrvStatusDayAvg, hrvStatusDayAvgWrapper, hrvStatusGaugeBar, hrvStatusLastNight,
          hrvStatusLastNightHighest5, hrvStatusLastNightHighest5Wrapper, hrvStatusSevenDaysAvg,
          hrvStatusSevenDaysAvgRate, hrvWeeklyLineChart, sleepChartLegendRemTimeWrapper);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class ActivityListDetailBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final LinearLayout activityBatteryInfoMasterLayout;

  @NonNull
  public final ActivityListItemBinding activityItemHolder;

  @NonNull
  public final FrameLayout chartsFragmentHolder;

  private ActivityListDetailBinding(@NonNull ScrollView rootView,
      @NonNull LinearLayout activityBatteryInfoMasterLayout,
      @NonNull ActivityListItemBinding activityItemHolder,
      @NonNull FrameLayout chartsFragmentHolder) {
    this.rootView = rootView;
    this.activityBatteryInfoMasterLayout = activityBatteryInfoMasterLayout;
    this.activityItemHolder = activityItemHolder;
    this.chartsFragmentHolder = chartsFragmentHolder;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityListDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityListDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_list_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityListDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.activity_battery_info_master_layout;
      LinearLayout activityBatteryInfoMasterLayout = ViewBindings.findChildViewById(rootView, id);
      if (activityBatteryInfoMasterLayout == null) {
        break missingId;
      }

      id = R.id.activityItemHolder;
      View activityItemHolder = ViewBindings.findChildViewById(rootView, id);
      if (activityItemHolder == null) {
        break missingId;
      }
      ActivityListItemBinding binding_activityItemHolder = ActivityListItemBinding.bind(activityItemHolder);

      id = R.id.chartsFragmentHolder;
      FrameLayout chartsFragmentHolder = ViewBindings.findChildViewById(rootView, id);
      if (chartsFragmentHolder == null) {
        break missingId;
      }

      return new ActivityListDetailBinding((ScrollView) rootView, activityBatteryInfoMasterLayout,
          binding_activityItemHolder, chartsFragmentHolder);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

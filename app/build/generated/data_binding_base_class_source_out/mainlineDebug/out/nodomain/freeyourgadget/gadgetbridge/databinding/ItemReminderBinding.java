// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class ItemReminderBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialCardView cardView;

  @NonNull
  public final TextView reminderItemMessage;

  @NonNull
  public final TextView reminderItemTime;

  private ItemReminderBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialCardView cardView, @NonNull TextView reminderItemMessage,
      @NonNull TextView reminderItemTime) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.reminderItemMessage = reminderItemMessage;
    this.reminderItemTime = reminderItemTime;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemReminderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemReminderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_reminder, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemReminderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_view;
      MaterialCardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.reminder_item_message;
      TextView reminderItemMessage = ViewBindings.findChildViewById(rootView, id);
      if (reminderItemMessage == null) {
        break missingId;
      }

      id = R.id.reminder_item_time;
      TextView reminderItemTime = ViewBindings.findChildViewById(rootView, id);
      if (reminderItemTime == null) {
        break missingId;
      }

      return new ItemReminderBinding((CoordinatorLayout) rootView, cardView, reminderItemMessage,
          reminderItemTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

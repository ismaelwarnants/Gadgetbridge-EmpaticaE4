// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class ActivityVescControlBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button vescControlButtonBreak;

  @NonNull
  public final Button vescControlButtonFwd;

  @NonNull
  public final CheckBox vescControlCheckboxVolumeKeys;

  @NonNull
  public final EditText vescControlInputBreakCurrent;

  @NonNull
  public final EditText vescControlInputRpm;

  private ActivityVescControlBinding(@NonNull LinearLayout rootView,
      @NonNull Button vescControlButtonBreak, @NonNull Button vescControlButtonFwd,
      @NonNull CheckBox vescControlCheckboxVolumeKeys,
      @NonNull EditText vescControlInputBreakCurrent, @NonNull EditText vescControlInputRpm) {
    this.rootView = rootView;
    this.vescControlButtonBreak = vescControlButtonBreak;
    this.vescControlButtonFwd = vescControlButtonFwd;
    this.vescControlCheckboxVolumeKeys = vescControlCheckboxVolumeKeys;
    this.vescControlInputBreakCurrent = vescControlInputBreakCurrent;
    this.vescControlInputRpm = vescControlInputRpm;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityVescControlBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityVescControlBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_vesc_control, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityVescControlBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.vesc_control_button_break;
      Button vescControlButtonBreak = ViewBindings.findChildViewById(rootView, id);
      if (vescControlButtonBreak == null) {
        break missingId;
      }

      id = R.id.vesc_control_button_fwd;
      Button vescControlButtonFwd = ViewBindings.findChildViewById(rootView, id);
      if (vescControlButtonFwd == null) {
        break missingId;
      }

      id = R.id.vesc_control_checkbox_volume_keys;
      CheckBox vescControlCheckboxVolumeKeys = ViewBindings.findChildViewById(rootView, id);
      if (vescControlCheckboxVolumeKeys == null) {
        break missingId;
      }

      id = R.id.vesc_control_input_break_current;
      EditText vescControlInputBreakCurrent = ViewBindings.findChildViewById(rootView, id);
      if (vescControlInputBreakCurrent == null) {
        break missingId;
      }

      id = R.id.vesc_control_input_rpm;
      EditText vescControlInputRpm = ViewBindings.findChildViewById(rootView, id);
      if (vescControlInputRpm == null) {
        break missingId;
      }

      return new ActivityVescControlBinding((LinearLayout) rootView, vescControlButtonBreak,
          vescControlButtonFwd, vescControlCheckboxVolumeKeys, vescControlInputBreakCurrent,
          vescControlInputRpm);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class ActivityMultipointPairingBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonPairNewDevice;

  @NonNull
  public final RecyclerView devicesRecyclerView;

  @NonNull
  public final LinearLayout emptyStateLayout;

  @NonNull
  public final SwitchCompat multipointEnabled;

  private ActivityMultipointPairingBinding(@NonNull LinearLayout rootView,
      @NonNull Button buttonPairNewDevice, @NonNull RecyclerView devicesRecyclerView,
      @NonNull LinearLayout emptyStateLayout, @NonNull SwitchCompat multipointEnabled) {
    this.rootView = rootView;
    this.buttonPairNewDevice = buttonPairNewDevice;
    this.devicesRecyclerView = devicesRecyclerView;
    this.emptyStateLayout = emptyStateLayout;
    this.multipointEnabled = multipointEnabled;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMultipointPairingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMultipointPairingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_multipoint_pairing, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMultipointPairingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_pair_new_device;
      Button buttonPairNewDevice = ViewBindings.findChildViewById(rootView, id);
      if (buttonPairNewDevice == null) {
        break missingId;
      }

      id = R.id.devices_recycler_view;
      RecyclerView devicesRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (devicesRecyclerView == null) {
        break missingId;
      }

      id = R.id.empty_state_layout;
      LinearLayout emptyStateLayout = ViewBindings.findChildViewById(rootView, id);
      if (emptyStateLayout == null) {
        break missingId;
      }

      id = R.id.multipoint_enabled;
      SwitchCompat multipointEnabled = ViewBindings.findChildViewById(rootView, id);
      if (multipointEnabled == null) {
        break missingId;
      }

      return new ActivityMultipointPairingBinding((LinearLayout) rootView, buttonPairNewDevice,
          devicesRecyclerView, emptyStateLayout, multipointEnabled);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

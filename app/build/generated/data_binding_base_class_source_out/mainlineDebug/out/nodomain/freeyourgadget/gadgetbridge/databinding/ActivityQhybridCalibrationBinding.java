// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class ActivityQhybridCalibrationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button qhybridCalibrationClockwise1;

  @NonNull
  public final Button qhybridCalibrationClockwise10;

  @NonNull
  public final Button qhybridCalibrationClockwise100;

  @NonNull
  public final Button qhybridCalibrationCounterClockwise1;

  @NonNull
  public final Button qhybridCalibrationCounterClockwise10;

  @NonNull
  public final Button qhybridCalibrationCounterClockwise100;

  @NonNull
  public final Spinner qhybridCalibrationHandSpinner;

  private ActivityQhybridCalibrationBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button qhybridCalibrationClockwise1, @NonNull Button qhybridCalibrationClockwise10,
      @NonNull Button qhybridCalibrationClockwise100,
      @NonNull Button qhybridCalibrationCounterClockwise1,
      @NonNull Button qhybridCalibrationCounterClockwise10,
      @NonNull Button qhybridCalibrationCounterClockwise100,
      @NonNull Spinner qhybridCalibrationHandSpinner) {
    this.rootView = rootView;
    this.qhybridCalibrationClockwise1 = qhybridCalibrationClockwise1;
    this.qhybridCalibrationClockwise10 = qhybridCalibrationClockwise10;
    this.qhybridCalibrationClockwise100 = qhybridCalibrationClockwise100;
    this.qhybridCalibrationCounterClockwise1 = qhybridCalibrationCounterClockwise1;
    this.qhybridCalibrationCounterClockwise10 = qhybridCalibrationCounterClockwise10;
    this.qhybridCalibrationCounterClockwise100 = qhybridCalibrationCounterClockwise100;
    this.qhybridCalibrationHandSpinner = qhybridCalibrationHandSpinner;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityQhybridCalibrationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityQhybridCalibrationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_qhybrid_calibration, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityQhybridCalibrationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.qhybrid_calibration_clockwise_1;
      Button qhybridCalibrationClockwise1 = ViewBindings.findChildViewById(rootView, id);
      if (qhybridCalibrationClockwise1 == null) {
        break missingId;
      }

      id = R.id.qhybrid_calibration_clockwise_10;
      Button qhybridCalibrationClockwise10 = ViewBindings.findChildViewById(rootView, id);
      if (qhybridCalibrationClockwise10 == null) {
        break missingId;
      }

      id = R.id.qhybrid_calibration_clockwise_100;
      Button qhybridCalibrationClockwise100 = ViewBindings.findChildViewById(rootView, id);
      if (qhybridCalibrationClockwise100 == null) {
        break missingId;
      }

      id = R.id.qhybrid_calibration_counter_clockwise_1;
      Button qhybridCalibrationCounterClockwise1 = ViewBindings.findChildViewById(rootView, id);
      if (qhybridCalibrationCounterClockwise1 == null) {
        break missingId;
      }

      id = R.id.qhybrid_calibration_counter_clockwise_10;
      Button qhybridCalibrationCounterClockwise10 = ViewBindings.findChildViewById(rootView, id);
      if (qhybridCalibrationCounterClockwise10 == null) {
        break missingId;
      }

      id = R.id.qhybrid_calibration_counter_clockwise_100;
      Button qhybridCalibrationCounterClockwise100 = ViewBindings.findChildViewById(rootView, id);
      if (qhybridCalibrationCounterClockwise100 == null) {
        break missingId;
      }

      id = R.id.qhybrid_calibration_hand_spinner;
      Spinner qhybridCalibrationHandSpinner = ViewBindings.findChildViewById(rootView, id);
      if (qhybridCalibrationHandSpinner == null) {
        break missingId;
      }

      return new ActivityQhybridCalibrationBinding((ConstraintLayout) rootView,
          qhybridCalibrationClockwise1, qhybridCalibrationClockwise10,
          qhybridCalibrationClockwise100, qhybridCalibrationCounterClockwise1,
          qhybridCalibrationCounterClockwise10, qhybridCalibrationCounterClockwise100,
          qhybridCalibrationHandSpinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

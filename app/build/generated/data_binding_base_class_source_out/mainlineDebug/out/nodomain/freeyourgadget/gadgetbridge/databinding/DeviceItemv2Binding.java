// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.github.mikephil.charting.charts.PieChart;
import com.google.android.flexbox.FlexboxLayout;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class DeviceItemv2Binding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final PieChart activityDashboardPiechart1;

  @NonNull
  public final PieChart activityDashboardPiechart2;

  @NonNull
  public final PieChart activityDashboardPiechart3;

  @NonNull
  public final TextView batteryStatus;

  @NonNull
  public final TextView batteryStatus1;

  @NonNull
  public final TextView batteryStatus2;

  @NonNull
  public final MaterialCardView cardView;

  @NonNull
  public final LinearLayout cardViewActivityCardLayout;

  @NonNull
  public final ImageView deviceActionCalibrate;

  @NonNull
  public final ImageView deviceActionFetchActivity;

  @NonNull
  public final LinearLayout deviceActionFetchActivityBox;

  @NonNull
  public final ImageView deviceActionFind;

  @NonNull
  public final ImageView deviceActionManageApps;

  @NonNull
  public final ImageView deviceActionPowerOff;

  @NonNull
  public final ImageView deviceActionSetAlarms;

  @NonNull
  public final ImageView deviceActionSetReminders;

  @NonNull
  public final ImageView deviceActionShowActivityGraphs;

  @NonNull
  public final ImageView deviceActionShowActivityTracks;

  @NonNull
  public final ImageView deviceActionTakeScreenshot;

  @NonNull
  public final ImageView deviceBatteryStatus;

  @NonNull
  public final ImageView deviceBatteryStatus1;

  @NonNull
  public final ImageView deviceBatteryStatus2;

  @NonNull
  public final LinearLayout deviceBatteryStatusBox;

  @NonNull
  public final LinearLayout deviceBatteryStatusBox1;

  @NonNull
  public final LinearLayout deviceBatteryStatusBox2;

  @NonNull
  public final ProgressBar deviceBusyIndicator;

  @NonNull
  public final LinearLayout deviceCustomAction0Box;

  @NonNull
  public final ImageView deviceCustomAction0Image;

  @NonNull
  public final TextView deviceCustomAction0Label;

  @NonNull
  public final LinearLayout deviceCustomAction1Box;

  @NonNull
  public final ImageView deviceCustomAction1Image;

  @NonNull
  public final TextView deviceCustomAction1Label;

  @NonNull
  public final LinearLayout deviceCustomAction2Box;

  @NonNull
  public final ImageView deviceCustomAction2Image;

  @NonNull
  public final TextView deviceCustomAction2Label;

  @NonNull
  public final ImageView deviceFmFrequency;

  @NonNull
  public final LinearLayout deviceFmFrequencyBox;

  @NonNull
  public final ImageView deviceHeartRateStatus;

  @NonNull
  public final LinearLayout deviceHeartRateStatusBox;

  @NonNull
  public final ImageView deviceImage;

  @NonNull
  public final FlexboxLayout deviceInfoIcons;

  @NonNull
  public final ImageView deviceInfoImage;

  @NonNull
  public final ListView deviceItemInfos;

  @NonNull
  public final RelativeLayout deviceItemInfosBox;

  @NonNull
  public final ImageView deviceLedColor;

  @NonNull
  public final TextView deviceName;

  @NonNull
  public final RelativeLayout deviceNameLayout;

  @NonNull
  public final ImageView deviceSpecificSettings;

  @NonNull
  public final TextView deviceStatus;

  @NonNull
  public final TextView fmFrequency;

  @NonNull
  public final TextView heartRateStatus;

  private DeviceItemv2Binding(@NonNull CoordinatorLayout rootView,
      @NonNull PieChart activityDashboardPiechart1, @NonNull PieChart activityDashboardPiechart2,
      @NonNull PieChart activityDashboardPiechart3, @NonNull TextView batteryStatus,
      @NonNull TextView batteryStatus1, @NonNull TextView batteryStatus2,
      @NonNull MaterialCardView cardView, @NonNull LinearLayout cardViewActivityCardLayout,
      @NonNull ImageView deviceActionCalibrate, @NonNull ImageView deviceActionFetchActivity,
      @NonNull LinearLayout deviceActionFetchActivityBox, @NonNull ImageView deviceActionFind,
      @NonNull ImageView deviceActionManageApps, @NonNull ImageView deviceActionPowerOff,
      @NonNull ImageView deviceActionSetAlarms, @NonNull ImageView deviceActionSetReminders,
      @NonNull ImageView deviceActionShowActivityGraphs,
      @NonNull ImageView deviceActionShowActivityTracks,
      @NonNull ImageView deviceActionTakeScreenshot, @NonNull ImageView deviceBatteryStatus,
      @NonNull ImageView deviceBatteryStatus1, @NonNull ImageView deviceBatteryStatus2,
      @NonNull LinearLayout deviceBatteryStatusBox, @NonNull LinearLayout deviceBatteryStatusBox1,
      @NonNull LinearLayout deviceBatteryStatusBox2, @NonNull ProgressBar deviceBusyIndicator,
      @NonNull LinearLayout deviceCustomAction0Box, @NonNull ImageView deviceCustomAction0Image,
      @NonNull TextView deviceCustomAction0Label, @NonNull LinearLayout deviceCustomAction1Box,
      @NonNull ImageView deviceCustomAction1Image, @NonNull TextView deviceCustomAction1Label,
      @NonNull LinearLayout deviceCustomAction2Box, @NonNull ImageView deviceCustomAction2Image,
      @NonNull TextView deviceCustomAction2Label, @NonNull ImageView deviceFmFrequency,
      @NonNull LinearLayout deviceFmFrequencyBox, @NonNull ImageView deviceHeartRateStatus,
      @NonNull LinearLayout deviceHeartRateStatusBox, @NonNull ImageView deviceImage,
      @NonNull FlexboxLayout deviceInfoIcons, @NonNull ImageView deviceInfoImage,
      @NonNull ListView deviceItemInfos, @NonNull RelativeLayout deviceItemInfosBox,
      @NonNull ImageView deviceLedColor, @NonNull TextView deviceName,
      @NonNull RelativeLayout deviceNameLayout, @NonNull ImageView deviceSpecificSettings,
      @NonNull TextView deviceStatus, @NonNull TextView fmFrequency,
      @NonNull TextView heartRateStatus) {
    this.rootView = rootView;
    this.activityDashboardPiechart1 = activityDashboardPiechart1;
    this.activityDashboardPiechart2 = activityDashboardPiechart2;
    this.activityDashboardPiechart3 = activityDashboardPiechart3;
    this.batteryStatus = batteryStatus;
    this.batteryStatus1 = batteryStatus1;
    this.batteryStatus2 = batteryStatus2;
    this.cardView = cardView;
    this.cardViewActivityCardLayout = cardViewActivityCardLayout;
    this.deviceActionCalibrate = deviceActionCalibrate;
    this.deviceActionFetchActivity = deviceActionFetchActivity;
    this.deviceActionFetchActivityBox = deviceActionFetchActivityBox;
    this.deviceActionFind = deviceActionFind;
    this.deviceActionManageApps = deviceActionManageApps;
    this.deviceActionPowerOff = deviceActionPowerOff;
    this.deviceActionSetAlarms = deviceActionSetAlarms;
    this.deviceActionSetReminders = deviceActionSetReminders;
    this.deviceActionShowActivityGraphs = deviceActionShowActivityGraphs;
    this.deviceActionShowActivityTracks = deviceActionShowActivityTracks;
    this.deviceActionTakeScreenshot = deviceActionTakeScreenshot;
    this.deviceBatteryStatus = deviceBatteryStatus;
    this.deviceBatteryStatus1 = deviceBatteryStatus1;
    this.deviceBatteryStatus2 = deviceBatteryStatus2;
    this.deviceBatteryStatusBox = deviceBatteryStatusBox;
    this.deviceBatteryStatusBox1 = deviceBatteryStatusBox1;
    this.deviceBatteryStatusBox2 = deviceBatteryStatusBox2;
    this.deviceBusyIndicator = deviceBusyIndicator;
    this.deviceCustomAction0Box = deviceCustomAction0Box;
    this.deviceCustomAction0Image = deviceCustomAction0Image;
    this.deviceCustomAction0Label = deviceCustomAction0Label;
    this.deviceCustomAction1Box = deviceCustomAction1Box;
    this.deviceCustomAction1Image = deviceCustomAction1Image;
    this.deviceCustomAction1Label = deviceCustomAction1Label;
    this.deviceCustomAction2Box = deviceCustomAction2Box;
    this.deviceCustomAction2Image = deviceCustomAction2Image;
    this.deviceCustomAction2Label = deviceCustomAction2Label;
    this.deviceFmFrequency = deviceFmFrequency;
    this.deviceFmFrequencyBox = deviceFmFrequencyBox;
    this.deviceHeartRateStatus = deviceHeartRateStatus;
    this.deviceHeartRateStatusBox = deviceHeartRateStatusBox;
    this.deviceImage = deviceImage;
    this.deviceInfoIcons = deviceInfoIcons;
    this.deviceInfoImage = deviceInfoImage;
    this.deviceItemInfos = deviceItemInfos;
    this.deviceItemInfosBox = deviceItemInfosBox;
    this.deviceLedColor = deviceLedColor;
    this.deviceName = deviceName;
    this.deviceNameLayout = deviceNameLayout;
    this.deviceSpecificSettings = deviceSpecificSettings;
    this.deviceStatus = deviceStatus;
    this.fmFrequency = fmFrequency;
    this.heartRateStatus = heartRateStatus;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DeviceItemv2Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DeviceItemv2Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.device_itemv2, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DeviceItemv2Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.activity_dashboard_piechart1;
      PieChart activityDashboardPiechart1 = ViewBindings.findChildViewById(rootView, id);
      if (activityDashboardPiechart1 == null) {
        break missingId;
      }

      id = R.id.activity_dashboard_piechart2;
      PieChart activityDashboardPiechart2 = ViewBindings.findChildViewById(rootView, id);
      if (activityDashboardPiechart2 == null) {
        break missingId;
      }

      id = R.id.activity_dashboard_piechart3;
      PieChart activityDashboardPiechart3 = ViewBindings.findChildViewById(rootView, id);
      if (activityDashboardPiechart3 == null) {
        break missingId;
      }

      id = R.id.battery_status;
      TextView batteryStatus = ViewBindings.findChildViewById(rootView, id);
      if (batteryStatus == null) {
        break missingId;
      }

      id = R.id.battery_status1;
      TextView batteryStatus1 = ViewBindings.findChildViewById(rootView, id);
      if (batteryStatus1 == null) {
        break missingId;
      }

      id = R.id.battery_status2;
      TextView batteryStatus2 = ViewBindings.findChildViewById(rootView, id);
      if (batteryStatus2 == null) {
        break missingId;
      }

      id = R.id.card_view;
      MaterialCardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.card_view_activity_card_layout;
      LinearLayout cardViewActivityCardLayout = ViewBindings.findChildViewById(rootView, id);
      if (cardViewActivityCardLayout == null) {
        break missingId;
      }

      id = R.id.device_action_calibrate;
      ImageView deviceActionCalibrate = ViewBindings.findChildViewById(rootView, id);
      if (deviceActionCalibrate == null) {
        break missingId;
      }

      id = R.id.device_action_fetch_activity;
      ImageView deviceActionFetchActivity = ViewBindings.findChildViewById(rootView, id);
      if (deviceActionFetchActivity == null) {
        break missingId;
      }

      id = R.id.device_action_fetch_activity_box;
      LinearLayout deviceActionFetchActivityBox = ViewBindings.findChildViewById(rootView, id);
      if (deviceActionFetchActivityBox == null) {
        break missingId;
      }

      id = R.id.device_action_find;
      ImageView deviceActionFind = ViewBindings.findChildViewById(rootView, id);
      if (deviceActionFind == null) {
        break missingId;
      }

      id = R.id.device_action_manage_apps;
      ImageView deviceActionManageApps = ViewBindings.findChildViewById(rootView, id);
      if (deviceActionManageApps == null) {
        break missingId;
      }

      id = R.id.device_action_power_off;
      ImageView deviceActionPowerOff = ViewBindings.findChildViewById(rootView, id);
      if (deviceActionPowerOff == null) {
        break missingId;
      }

      id = R.id.device_action_set_alarms;
      ImageView deviceActionSetAlarms = ViewBindings.findChildViewById(rootView, id);
      if (deviceActionSetAlarms == null) {
        break missingId;
      }

      id = R.id.device_action_set_reminders;
      ImageView deviceActionSetReminders = ViewBindings.findChildViewById(rootView, id);
      if (deviceActionSetReminders == null) {
        break missingId;
      }

      id = R.id.device_action_show_activity_graphs;
      ImageView deviceActionShowActivityGraphs = ViewBindings.findChildViewById(rootView, id);
      if (deviceActionShowActivityGraphs == null) {
        break missingId;
      }

      id = R.id.device_action_show_activity_tracks;
      ImageView deviceActionShowActivityTracks = ViewBindings.findChildViewById(rootView, id);
      if (deviceActionShowActivityTracks == null) {
        break missingId;
      }

      id = R.id.device_action_take_screenshot;
      ImageView deviceActionTakeScreenshot = ViewBindings.findChildViewById(rootView, id);
      if (deviceActionTakeScreenshot == null) {
        break missingId;
      }

      id = R.id.device_battery_status;
      ImageView deviceBatteryStatus = ViewBindings.findChildViewById(rootView, id);
      if (deviceBatteryStatus == null) {
        break missingId;
      }

      id = R.id.device_battery_status1;
      ImageView deviceBatteryStatus1 = ViewBindings.findChildViewById(rootView, id);
      if (deviceBatteryStatus1 == null) {
        break missingId;
      }

      id = R.id.device_battery_status2;
      ImageView deviceBatteryStatus2 = ViewBindings.findChildViewById(rootView, id);
      if (deviceBatteryStatus2 == null) {
        break missingId;
      }

      id = R.id.device_battery_status_box;
      LinearLayout deviceBatteryStatusBox = ViewBindings.findChildViewById(rootView, id);
      if (deviceBatteryStatusBox == null) {
        break missingId;
      }

      id = R.id.device_battery_status_box1;
      LinearLayout deviceBatteryStatusBox1 = ViewBindings.findChildViewById(rootView, id);
      if (deviceBatteryStatusBox1 == null) {
        break missingId;
      }

      id = R.id.device_battery_status_box2;
      LinearLayout deviceBatteryStatusBox2 = ViewBindings.findChildViewById(rootView, id);
      if (deviceBatteryStatusBox2 == null) {
        break missingId;
      }

      id = R.id.device_busy_indicator;
      ProgressBar deviceBusyIndicator = ViewBindings.findChildViewById(rootView, id);
      if (deviceBusyIndicator == null) {
        break missingId;
      }

      id = R.id.device_custom_action_0_box;
      LinearLayout deviceCustomAction0Box = ViewBindings.findChildViewById(rootView, id);
      if (deviceCustomAction0Box == null) {
        break missingId;
      }

      id = R.id.device_custom_action_0_image;
      ImageView deviceCustomAction0Image = ViewBindings.findChildViewById(rootView, id);
      if (deviceCustomAction0Image == null) {
        break missingId;
      }

      id = R.id.device_custom_action_0_label;
      TextView deviceCustomAction0Label = ViewBindings.findChildViewById(rootView, id);
      if (deviceCustomAction0Label == null) {
        break missingId;
      }

      id = R.id.device_custom_action_1_box;
      LinearLayout deviceCustomAction1Box = ViewBindings.findChildViewById(rootView, id);
      if (deviceCustomAction1Box == null) {
        break missingId;
      }

      id = R.id.device_custom_action_1_image;
      ImageView deviceCustomAction1Image = ViewBindings.findChildViewById(rootView, id);
      if (deviceCustomAction1Image == null) {
        break missingId;
      }

      id = R.id.device_custom_action_1_label;
      TextView deviceCustomAction1Label = ViewBindings.findChildViewById(rootView, id);
      if (deviceCustomAction1Label == null) {
        break missingId;
      }

      id = R.id.device_custom_action_2_box;
      LinearLayout deviceCustomAction2Box = ViewBindings.findChildViewById(rootView, id);
      if (deviceCustomAction2Box == null) {
        break missingId;
      }

      id = R.id.device_custom_action_2_image;
      ImageView deviceCustomAction2Image = ViewBindings.findChildViewById(rootView, id);
      if (deviceCustomAction2Image == null) {
        break missingId;
      }

      id = R.id.device_custom_action_2_label;
      TextView deviceCustomAction2Label = ViewBindings.findChildViewById(rootView, id);
      if (deviceCustomAction2Label == null) {
        break missingId;
      }

      id = R.id.device_fm_frequency;
      ImageView deviceFmFrequency = ViewBindings.findChildViewById(rootView, id);
      if (deviceFmFrequency == null) {
        break missingId;
      }

      id = R.id.device_fm_frequency_box;
      LinearLayout deviceFmFrequencyBox = ViewBindings.findChildViewById(rootView, id);
      if (deviceFmFrequencyBox == null) {
        break missingId;
      }

      id = R.id.device_heart_rate_status;
      ImageView deviceHeartRateStatus = ViewBindings.findChildViewById(rootView, id);
      if (deviceHeartRateStatus == null) {
        break missingId;
      }

      id = R.id.device_heart_rate_status_box;
      LinearLayout deviceHeartRateStatusBox = ViewBindings.findChildViewById(rootView, id);
      if (deviceHeartRateStatusBox == null) {
        break missingId;
      }

      id = R.id.device_image;
      ImageView deviceImage = ViewBindings.findChildViewById(rootView, id);
      if (deviceImage == null) {
        break missingId;
      }

      id = R.id.device_info_icons;
      FlexboxLayout deviceInfoIcons = ViewBindings.findChildViewById(rootView, id);
      if (deviceInfoIcons == null) {
        break missingId;
      }

      id = R.id.device_info_image;
      ImageView deviceInfoImage = ViewBindings.findChildViewById(rootView, id);
      if (deviceInfoImage == null) {
        break missingId;
      }

      id = R.id.device_item_infos;
      ListView deviceItemInfos = ViewBindings.findChildViewById(rootView, id);
      if (deviceItemInfos == null) {
        break missingId;
      }

      id = R.id.device_item_infos_box;
      RelativeLayout deviceItemInfosBox = ViewBindings.findChildViewById(rootView, id);
      if (deviceItemInfosBox == null) {
        break missingId;
      }

      id = R.id.device_led_color;
      ImageView deviceLedColor = ViewBindings.findChildViewById(rootView, id);
      if (deviceLedColor == null) {
        break missingId;
      }

      id = R.id.device_name;
      TextView deviceName = ViewBindings.findChildViewById(rootView, id);
      if (deviceName == null) {
        break missingId;
      }

      id = R.id.device_name_layout;
      RelativeLayout deviceNameLayout = ViewBindings.findChildViewById(rootView, id);
      if (deviceNameLayout == null) {
        break missingId;
      }

      id = R.id.device_specific_settings;
      ImageView deviceSpecificSettings = ViewBindings.findChildViewById(rootView, id);
      if (deviceSpecificSettings == null) {
        break missingId;
      }

      id = R.id.device_status;
      TextView deviceStatus = ViewBindings.findChildViewById(rootView, id);
      if (deviceStatus == null) {
        break missingId;
      }

      id = R.id.fm_frequency;
      TextView fmFrequency = ViewBindings.findChildViewById(rootView, id);
      if (fmFrequency == null) {
        break missingId;
      }

      id = R.id.heart_rate_status;
      TextView heartRateStatus = ViewBindings.findChildViewById(rootView, id);
      if (heartRateStatus == null) {
        break missingId;
      }

      return new DeviceItemv2Binding((CoordinatorLayout) rootView, activityDashboardPiechart1,
          activityDashboardPiechart2, activityDashboardPiechart3, batteryStatus, batteryStatus1,
          batteryStatus2, cardView, cardViewActivityCardLayout, deviceActionCalibrate,
          deviceActionFetchActivity, deviceActionFetchActivityBox, deviceActionFind,
          deviceActionManageApps, deviceActionPowerOff, deviceActionSetAlarms,
          deviceActionSetReminders, deviceActionShowActivityGraphs, deviceActionShowActivityTracks,
          deviceActionTakeScreenshot, deviceBatteryStatus, deviceBatteryStatus1,
          deviceBatteryStatus2, deviceBatteryStatusBox, deviceBatteryStatusBox1,
          deviceBatteryStatusBox2, deviceBusyIndicator, deviceCustomAction0Box,
          deviceCustomAction0Image, deviceCustomAction0Label, deviceCustomAction1Box,
          deviceCustomAction1Image, deviceCustomAction1Label, deviceCustomAction2Box,
          deviceCustomAction2Image, deviceCustomAction2Label, deviceFmFrequency,
          deviceFmFrequencyBox, deviceHeartRateStatus, deviceHeartRateStatusBox, deviceImage,
          deviceInfoIcons, deviceInfoImage, deviceItemInfos, deviceItemInfosBox, deviceLedColor,
          deviceName, deviceNameLayout, deviceSpecificSettings, deviceStatus, fmFrequency,
          heartRateStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

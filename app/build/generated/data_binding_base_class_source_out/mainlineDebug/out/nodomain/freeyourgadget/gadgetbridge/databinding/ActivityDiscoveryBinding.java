// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class ActivityDiscoveryBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ListView discoveryDeviceCandidatesList;

  @NonNull
  public final TextView discoveryHint;

  @NonNull
  public final TextView discoveryNote;

  @NonNull
  public final ProgressBar discoveryProgressbar;

  @NonNull
  public final Button discoveryStart;

  private ActivityDiscoveryBinding(@NonNull LinearLayout rootView,
      @NonNull ListView discoveryDeviceCandidatesList, @NonNull TextView discoveryHint,
      @NonNull TextView discoveryNote, @NonNull ProgressBar discoveryProgressbar,
      @NonNull Button discoveryStart) {
    this.rootView = rootView;
    this.discoveryDeviceCandidatesList = discoveryDeviceCandidatesList;
    this.discoveryHint = discoveryHint;
    this.discoveryNote = discoveryNote;
    this.discoveryProgressbar = discoveryProgressbar;
    this.discoveryStart = discoveryStart;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDiscoveryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDiscoveryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_discovery, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDiscoveryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.discovery_device_candidates_list;
      ListView discoveryDeviceCandidatesList = ViewBindings.findChildViewById(rootView, id);
      if (discoveryDeviceCandidatesList == null) {
        break missingId;
      }

      id = R.id.discovery_hint;
      TextView discoveryHint = ViewBindings.findChildViewById(rootView, id);
      if (discoveryHint == null) {
        break missingId;
      }

      id = R.id.discovery_note;
      TextView discoveryNote = ViewBindings.findChildViewById(rootView, id);
      if (discoveryNote == null) {
        break missingId;
      }

      id = R.id.discovery_progressbar;
      ProgressBar discoveryProgressbar = ViewBindings.findChildViewById(rootView, id);
      if (discoveryProgressbar == null) {
        break missingId;
      }

      id = R.id.discovery_start;
      Button discoveryStart = ViewBindings.findChildViewById(rootView, id);
      if (discoveryStart == null) {
        break missingId;
      }

      return new ActivityDiscoveryBinding((LinearLayout) rootView, discoveryDeviceCandidatesList,
          discoveryHint, discoveryNote, discoveryProgressbar, discoveryStart);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

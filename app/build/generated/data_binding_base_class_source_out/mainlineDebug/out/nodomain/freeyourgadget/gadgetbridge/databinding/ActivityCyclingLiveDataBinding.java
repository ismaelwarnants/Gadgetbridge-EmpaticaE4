// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class ActivityCyclingLiveDataBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView cyclingDataSpeed;

  @NonNull
  public final TextView cyclingDataTotalDistance;

  @NonNull
  public final TextView cyclingDataTripDistance;

  private ActivityCyclingLiveDataBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView cyclingDataSpeed, @NonNull TextView cyclingDataTotalDistance,
      @NonNull TextView cyclingDataTripDistance) {
    this.rootView = rootView;
    this.cyclingDataSpeed = cyclingDataSpeed;
    this.cyclingDataTotalDistance = cyclingDataTotalDistance;
    this.cyclingDataTripDistance = cyclingDataTripDistance;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCyclingLiveDataBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCyclingLiveDataBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_cycling_live_data, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCyclingLiveDataBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cycling_data_speed;
      TextView cyclingDataSpeed = ViewBindings.findChildViewById(rootView, id);
      if (cyclingDataSpeed == null) {
        break missingId;
      }

      id = R.id.cycling_data_total_distance;
      TextView cyclingDataTotalDistance = ViewBindings.findChildViewById(rootView, id);
      if (cyclingDataTotalDistance == null) {
        break missingId;
      }

      id = R.id.cycling_data_trip_distance;
      TextView cyclingDataTripDistance = ViewBindings.findChildViewById(rootView, id);
      if (cyclingDataTripDistance == null) {
        break missingId;
      }

      return new ActivityCyclingLiveDataBinding((ConstraintLayout) rootView, cyclingDataSpeed,
          cyclingDataTotalDistance, cyclingDataTripDistance);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

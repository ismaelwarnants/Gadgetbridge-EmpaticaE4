// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.NumberPicker;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class DialogFrequencyPickerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final NumberPicker frequencyDec;

  @NonNull
  public final NumberPicker frequencyFraction;

  @NonNull
  public final Button frequencyPreset1;

  @NonNull
  public final Button frequencyPreset2;

  @NonNull
  public final Button frequencyPreset3;

  @NonNull
  public final TextView textView5;

  @NonNull
  public final TextView textView6;

  private DialogFrequencyPickerBinding(@NonNull LinearLayout rootView,
      @NonNull NumberPicker frequencyDec, @NonNull NumberPicker frequencyFraction,
      @NonNull Button frequencyPreset1, @NonNull Button frequencyPreset2,
      @NonNull Button frequencyPreset3, @NonNull TextView textView5, @NonNull TextView textView6) {
    this.rootView = rootView;
    this.frequencyDec = frequencyDec;
    this.frequencyFraction = frequencyFraction;
    this.frequencyPreset1 = frequencyPreset1;
    this.frequencyPreset2 = frequencyPreset2;
    this.frequencyPreset3 = frequencyPreset3;
    this.textView5 = textView5;
    this.textView6 = textView6;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogFrequencyPickerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogFrequencyPickerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_frequency_picker, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogFrequencyPickerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.frequency_dec;
      NumberPicker frequencyDec = ViewBindings.findChildViewById(rootView, id);
      if (frequencyDec == null) {
        break missingId;
      }

      id = R.id.frequency_fraction;
      NumberPicker frequencyFraction = ViewBindings.findChildViewById(rootView, id);
      if (frequencyFraction == null) {
        break missingId;
      }

      id = R.id.frequency_preset1;
      Button frequencyPreset1 = ViewBindings.findChildViewById(rootView, id);
      if (frequencyPreset1 == null) {
        break missingId;
      }

      id = R.id.frequency_preset2;
      Button frequencyPreset2 = ViewBindings.findChildViewById(rootView, id);
      if (frequencyPreset2 == null) {
        break missingId;
      }

      id = R.id.frequency_preset3;
      Button frequencyPreset3 = ViewBindings.findChildViewById(rootView, id);
      if (frequencyPreset3 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = ViewBindings.findChildViewById(rootView, id);
      if (textView6 == null) {
        break missingId;
      }

      return new DialogFrequencyPickerBinding((LinearLayout) rootView, frequencyDec,
          frequencyFraction, frequencyPreset1, frequencyPreset2, frequencyPreset3, textView5,
          textView6);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

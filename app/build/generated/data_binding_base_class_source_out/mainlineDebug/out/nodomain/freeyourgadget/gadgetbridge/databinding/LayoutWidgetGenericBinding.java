// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class LayoutWidgetGenericBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView genericWidgetIcon;

  @NonNull
  public final TextView genericWidgetTitle;

  @NonNull
  public final TextView genericWidgetValue;

  @NonNull
  public final LinearLayout lineLayoutStep;

  private LayoutWidgetGenericBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView genericWidgetIcon, @NonNull TextView genericWidgetTitle,
      @NonNull TextView genericWidgetValue, @NonNull LinearLayout lineLayoutStep) {
    this.rootView = rootView;
    this.genericWidgetIcon = genericWidgetIcon;
    this.genericWidgetTitle = genericWidgetTitle;
    this.genericWidgetValue = genericWidgetValue;
    this.lineLayoutStep = lineLayoutStep;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutWidgetGenericBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutWidgetGenericBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_widget_generic, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutWidgetGenericBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.generic_widget_icon;
      ImageView genericWidgetIcon = ViewBindings.findChildViewById(rootView, id);
      if (genericWidgetIcon == null) {
        break missingId;
      }

      id = R.id.generic_widget_title;
      TextView genericWidgetTitle = ViewBindings.findChildViewById(rootView, id);
      if (genericWidgetTitle == null) {
        break missingId;
      }

      id = R.id.generic_widget_value;
      TextView genericWidgetValue = ViewBindings.findChildViewById(rootView, id);
      if (genericWidgetValue == null) {
        break missingId;
      }

      LinearLayout lineLayoutStep = (LinearLayout) rootView;

      return new LayoutWidgetGenericBinding((LinearLayout) rootView, genericWidgetIcon,
          genericWidgetTitle, genericWidgetValue, lineLayoutStep);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

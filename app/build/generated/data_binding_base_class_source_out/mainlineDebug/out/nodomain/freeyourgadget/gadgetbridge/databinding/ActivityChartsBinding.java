// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class ActivityChartsBinding implements ViewBinding {
  @NonNull
  private final SwipeRefreshLayout rootView;

  @NonNull
  public final SwipeRefreshLayout activitySwipeLayout;

  @NonNull
  public final LinearLayout chartsDateBar;

  @NonNull
  public final LinearLayout chartsDateButtonBar;

  @NonNull
  public final LinearLayout chartsMainLayout;

  @NonNull
  public final Button chartsNextDay;

  @NonNull
  public final Button chartsNextMonth;

  @NonNull
  public final Button chartsNextWeek;

  @NonNull
  public final ViewPager2 chartsPager;

  @NonNull
  public final TabLayout chartsPagerTabStrip;

  @NonNull
  public final Button chartsPreviousDay;

  @NonNull
  public final Button chartsPreviousMonth;

  @NonNull
  public final Button chartsPreviousWeek;

  @NonNull
  public final TextView chartsTextDate;

  private ActivityChartsBinding(@NonNull SwipeRefreshLayout rootView,
      @NonNull SwipeRefreshLayout activitySwipeLayout, @NonNull LinearLayout chartsDateBar,
      @NonNull LinearLayout chartsDateButtonBar, @NonNull LinearLayout chartsMainLayout,
      @NonNull Button chartsNextDay, @NonNull Button chartsNextMonth,
      @NonNull Button chartsNextWeek, @NonNull ViewPager2 chartsPager,
      @NonNull TabLayout chartsPagerTabStrip, @NonNull Button chartsPreviousDay,
      @NonNull Button chartsPreviousMonth, @NonNull Button chartsPreviousWeek,
      @NonNull TextView chartsTextDate) {
    this.rootView = rootView;
    this.activitySwipeLayout = activitySwipeLayout;
    this.chartsDateBar = chartsDateBar;
    this.chartsDateButtonBar = chartsDateButtonBar;
    this.chartsMainLayout = chartsMainLayout;
    this.chartsNextDay = chartsNextDay;
    this.chartsNextMonth = chartsNextMonth;
    this.chartsNextWeek = chartsNextWeek;
    this.chartsPager = chartsPager;
    this.chartsPagerTabStrip = chartsPagerTabStrip;
    this.chartsPreviousDay = chartsPreviousDay;
    this.chartsPreviousMonth = chartsPreviousMonth;
    this.chartsPreviousWeek = chartsPreviousWeek;
    this.chartsTextDate = chartsTextDate;
  }

  @Override
  @NonNull
  public SwipeRefreshLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChartsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChartsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_charts, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChartsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      SwipeRefreshLayout activitySwipeLayout = (SwipeRefreshLayout) rootView;

      id = R.id.charts_date_bar;
      LinearLayout chartsDateBar = ViewBindings.findChildViewById(rootView, id);
      if (chartsDateBar == null) {
        break missingId;
      }

      id = R.id.charts_date_button_bar;
      LinearLayout chartsDateButtonBar = ViewBindings.findChildViewById(rootView, id);
      if (chartsDateButtonBar == null) {
        break missingId;
      }

      id = R.id.charts_main_layout;
      LinearLayout chartsMainLayout = ViewBindings.findChildViewById(rootView, id);
      if (chartsMainLayout == null) {
        break missingId;
      }

      id = R.id.charts_next_day;
      Button chartsNextDay = ViewBindings.findChildViewById(rootView, id);
      if (chartsNextDay == null) {
        break missingId;
      }

      id = R.id.charts_next_month;
      Button chartsNextMonth = ViewBindings.findChildViewById(rootView, id);
      if (chartsNextMonth == null) {
        break missingId;
      }

      id = R.id.charts_next_week;
      Button chartsNextWeek = ViewBindings.findChildViewById(rootView, id);
      if (chartsNextWeek == null) {
        break missingId;
      }

      id = R.id.charts_pager;
      ViewPager2 chartsPager = ViewBindings.findChildViewById(rootView, id);
      if (chartsPager == null) {
        break missingId;
      }

      id = R.id.charts_pagerTabStrip;
      TabLayout chartsPagerTabStrip = ViewBindings.findChildViewById(rootView, id);
      if (chartsPagerTabStrip == null) {
        break missingId;
      }

      id = R.id.charts_previous_day;
      Button chartsPreviousDay = ViewBindings.findChildViewById(rootView, id);
      if (chartsPreviousDay == null) {
        break missingId;
      }

      id = R.id.charts_previous_month;
      Button chartsPreviousMonth = ViewBindings.findChildViewById(rootView, id);
      if (chartsPreviousMonth == null) {
        break missingId;
      }

      id = R.id.charts_previous_week;
      Button chartsPreviousWeek = ViewBindings.findChildViewById(rootView, id);
      if (chartsPreviousWeek == null) {
        break missingId;
      }

      id = R.id.charts_text_date;
      TextView chartsTextDate = ViewBindings.findChildViewById(rootView, id);
      if (chartsTextDate == null) {
        break missingId;
      }

      return new ActivityChartsBinding((SwipeRefreshLayout) rootView, activitySwipeLayout,
          chartsDateBar, chartsDateButtonBar, chartsMainLayout, chartsNextDay, chartsNextMonth,
          chartsNextWeek, chartsPager, chartsPagerTabStrip, chartsPreviousDay, chartsPreviousMonth,
          chartsPreviousWeek, chartsTextDate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

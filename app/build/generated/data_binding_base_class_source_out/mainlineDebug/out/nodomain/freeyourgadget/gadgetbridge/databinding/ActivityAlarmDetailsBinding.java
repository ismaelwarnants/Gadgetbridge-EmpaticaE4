// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TimePicker;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatCheckedTextView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class ActivityAlarmDetailsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AppCompatCheckedTextView cbBacklight;

  @NonNull
  public final AppCompatCheckedTextView cbFriday;

  @NonNull
  public final AppCompatCheckedTextView cbMonday;

  @NonNull
  public final AppCompatCheckedTextView cbSaturday;

  @NonNull
  public final AppCompatCheckedTextView cbSmartWakeup;

  @NonNull
  public final EditText cbSmartWakeupInterval;

  @NonNull
  public final AppCompatCheckedTextView cbSnooze;

  @NonNull
  public final AppCompatCheckedTextView cbSunday;

  @NonNull
  public final AppCompatCheckedTextView cbThursday;

  @NonNull
  public final AppCompatCheckedTextView cbTuesday;

  @NonNull
  public final AppCompatCheckedTextView cbWednesday;

  @NonNull
  public final EditText description;

  @NonNull
  public final LinearLayout dowSelector;

  @NonNull
  public final TextInputLayout presetLabelLayout;

  @NonNull
  public final AutoCompleteTextView presetLabelSpinner;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final TextInputLayout soundModeLayout;

  @NonNull
  public final AutoCompleteTextView soundModeSpinner;

  @NonNull
  public final TimePicker timePicker;

  @NonNull
  public final EditText title;

  private ActivityAlarmDetailsBinding(@NonNull RelativeLayout rootView,
      @NonNull AppCompatCheckedTextView cbBacklight, @NonNull AppCompatCheckedTextView cbFriday,
      @NonNull AppCompatCheckedTextView cbMonday, @NonNull AppCompatCheckedTextView cbSaturday,
      @NonNull AppCompatCheckedTextView cbSmartWakeup, @NonNull EditText cbSmartWakeupInterval,
      @NonNull AppCompatCheckedTextView cbSnooze, @NonNull AppCompatCheckedTextView cbSunday,
      @NonNull AppCompatCheckedTextView cbThursday, @NonNull AppCompatCheckedTextView cbTuesday,
      @NonNull AppCompatCheckedTextView cbWednesday, @NonNull EditText description,
      @NonNull LinearLayout dowSelector, @NonNull TextInputLayout presetLabelLayout,
      @NonNull AutoCompleteTextView presetLabelSpinner, @NonNull ScrollView scrollView,
      @NonNull TextInputLayout soundModeLayout, @NonNull AutoCompleteTextView soundModeSpinner,
      @NonNull TimePicker timePicker, @NonNull EditText title) {
    this.rootView = rootView;
    this.cbBacklight = cbBacklight;
    this.cbFriday = cbFriday;
    this.cbMonday = cbMonday;
    this.cbSaturday = cbSaturday;
    this.cbSmartWakeup = cbSmartWakeup;
    this.cbSmartWakeupInterval = cbSmartWakeupInterval;
    this.cbSnooze = cbSnooze;
    this.cbSunday = cbSunday;
    this.cbThursday = cbThursday;
    this.cbTuesday = cbTuesday;
    this.cbWednesday = cbWednesday;
    this.description = description;
    this.dowSelector = dowSelector;
    this.presetLabelLayout = presetLabelLayout;
    this.presetLabelSpinner = presetLabelSpinner;
    this.scrollView = scrollView;
    this.soundModeLayout = soundModeLayout;
    this.soundModeSpinner = soundModeSpinner;
    this.timePicker = timePicker;
    this.title = title;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAlarmDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAlarmDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_alarm_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAlarmDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cb_backlight;
      AppCompatCheckedTextView cbBacklight = ViewBindings.findChildViewById(rootView, id);
      if (cbBacklight == null) {
        break missingId;
      }

      id = R.id.cb_friday;
      AppCompatCheckedTextView cbFriday = ViewBindings.findChildViewById(rootView, id);
      if (cbFriday == null) {
        break missingId;
      }

      id = R.id.cb_monday;
      AppCompatCheckedTextView cbMonday = ViewBindings.findChildViewById(rootView, id);
      if (cbMonday == null) {
        break missingId;
      }

      id = R.id.cb_saturday;
      AppCompatCheckedTextView cbSaturday = ViewBindings.findChildViewById(rootView, id);
      if (cbSaturday == null) {
        break missingId;
      }

      id = R.id.cb_smart_wakeup;
      AppCompatCheckedTextView cbSmartWakeup = ViewBindings.findChildViewById(rootView, id);
      if (cbSmartWakeup == null) {
        break missingId;
      }

      id = R.id.cb_smart_wakeup_interval;
      EditText cbSmartWakeupInterval = ViewBindings.findChildViewById(rootView, id);
      if (cbSmartWakeupInterval == null) {
        break missingId;
      }

      id = R.id.cb_snooze;
      AppCompatCheckedTextView cbSnooze = ViewBindings.findChildViewById(rootView, id);
      if (cbSnooze == null) {
        break missingId;
      }

      id = R.id.cb_sunday;
      AppCompatCheckedTextView cbSunday = ViewBindings.findChildViewById(rootView, id);
      if (cbSunday == null) {
        break missingId;
      }

      id = R.id.cb_thursday;
      AppCompatCheckedTextView cbThursday = ViewBindings.findChildViewById(rootView, id);
      if (cbThursday == null) {
        break missingId;
      }

      id = R.id.cb_tuesday;
      AppCompatCheckedTextView cbTuesday = ViewBindings.findChildViewById(rootView, id);
      if (cbTuesday == null) {
        break missingId;
      }

      id = R.id.cb_wednesday;
      AppCompatCheckedTextView cbWednesday = ViewBindings.findChildViewById(rootView, id);
      if (cbWednesday == null) {
        break missingId;
      }

      id = R.id.description;
      EditText description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.dowSelector;
      LinearLayout dowSelector = ViewBindings.findChildViewById(rootView, id);
      if (dowSelector == null) {
        break missingId;
      }

      id = R.id.preset_label_layout;
      TextInputLayout presetLabelLayout = ViewBindings.findChildViewById(rootView, id);
      if (presetLabelLayout == null) {
        break missingId;
      }

      id = R.id.preset_label_spinner;
      AutoCompleteTextView presetLabelSpinner = ViewBindings.findChildViewById(rootView, id);
      if (presetLabelSpinner == null) {
        break missingId;
      }

      id = R.id.scrollView;
      ScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.sound_mode_layout;
      TextInputLayout soundModeLayout = ViewBindings.findChildViewById(rootView, id);
      if (soundModeLayout == null) {
        break missingId;
      }

      id = R.id.sound_mode_spinner;
      AutoCompleteTextView soundModeSpinner = ViewBindings.findChildViewById(rootView, id);
      if (soundModeSpinner == null) {
        break missingId;
      }

      id = R.id.time_picker;
      TimePicker timePicker = ViewBindings.findChildViewById(rootView, id);
      if (timePicker == null) {
        break missingId;
      }

      id = R.id.title;
      EditText title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new ActivityAlarmDetailsBinding((RelativeLayout) rootView, cbBacklight, cbFriday,
          cbMonday, cbSaturday, cbSmartWakeup, cbSmartWakeupInterval, cbSnooze, cbSunday,
          cbThursday, cbTuesday, cbWednesday, description, dowSelector, presetLabelLayout,
          presetLabelSpinner, scrollView, soundModeLayout, soundModeSpinner, timePicker, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

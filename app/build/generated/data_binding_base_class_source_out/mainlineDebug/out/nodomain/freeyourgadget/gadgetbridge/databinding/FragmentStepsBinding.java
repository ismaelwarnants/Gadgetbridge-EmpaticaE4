// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.github.mikephil.charting.charts.LineChart;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class FragmentStepsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView stepsCount;

  @NonNull
  public final LineChart stepsDailyChart;

  @NonNull
  public final TextView stepsDateView;

  @NonNull
  public final TextView stepsDistance;

  @NonNull
  public final ImageView stepsGauge;

  @NonNull
  public final ImageView stepsStreaksButton;

  private FragmentStepsBinding(@NonNull ScrollView rootView, @NonNull TextView stepsCount,
      @NonNull LineChart stepsDailyChart, @NonNull TextView stepsDateView,
      @NonNull TextView stepsDistance, @NonNull ImageView stepsGauge,
      @NonNull ImageView stepsStreaksButton) {
    this.rootView = rootView;
    this.stepsCount = stepsCount;
    this.stepsDailyChart = stepsDailyChart;
    this.stepsDateView = stepsDateView;
    this.stepsDistance = stepsDistance;
    this.stepsGauge = stepsGauge;
    this.stepsStreaksButton = stepsStreaksButton;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentStepsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentStepsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_steps, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentStepsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.steps_count;
      TextView stepsCount = ViewBindings.findChildViewById(rootView, id);
      if (stepsCount == null) {
        break missingId;
      }

      id = R.id.steps_daily_chart;
      LineChart stepsDailyChart = ViewBindings.findChildViewById(rootView, id);
      if (stepsDailyChart == null) {
        break missingId;
      }

      id = R.id.steps_date_view;
      TextView stepsDateView = ViewBindings.findChildViewById(rootView, id);
      if (stepsDateView == null) {
        break missingId;
      }

      id = R.id.steps_distance;
      TextView stepsDistance = ViewBindings.findChildViewById(rootView, id);
      if (stepsDistance == null) {
        break missingId;
      }

      id = R.id.steps_gauge;
      ImageView stepsGauge = ViewBindings.findChildViewById(rootView, id);
      if (stepsGauge == null) {
        break missingId;
      }

      id = R.id.steps_streaks_button;
      ImageView stepsStreaksButton = ViewBindings.findChildViewById(rootView, id);
      if (stepsStreaksButton == null) {
        break missingId;
      }

      return new FragmentStepsBinding((ScrollView) rootView, stepsCount, stepsDailyChart,
          stepsDateView, stepsDistance, stepsGauge, stepsStreaksButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

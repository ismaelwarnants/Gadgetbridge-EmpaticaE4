// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class ActivityDataManagementBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView activityDataManagementPath;

  @NonNull
  public final TextView activityDataManagementPath2;

  @NonNull
  public final TextView backupRestoreIntro;

  @NonNull
  public final TextView backupRestoreLabel;

  @NonNull
  public final Button backupToZipButton;

  @NonNull
  public final Button cleanExportDirectoryButton;

  @NonNull
  public final TextView cleanExportDirectoryLabel;

  @NonNull
  public final TextView cleanExportDirectoryText;

  @NonNull
  public final TextView dbManagementIntro;

  @NonNull
  public final Button deleteOldActivityDB;

  @NonNull
  public final TextView emptyActivityDataTitle;

  @NonNull
  public final Button emptyDBButton;

  @NonNull
  public final TextView emptyDBText;

  @NonNull
  public final Button exportDataButton;

  @NonNull
  public final TextView exportImportLabel;

  @NonNull
  public final Button importDataButton;

  @NonNull
  public final TextView mergeOldActivityDataTitle;

  @NonNull
  public final Button restoreFromZipButton;

  @NonNull
  public final Button showContentDataButton;

  private ActivityDataManagementBinding(@NonNull ScrollView rootView,
      @NonNull TextView activityDataManagementPath, @NonNull TextView activityDataManagementPath2,
      @NonNull TextView backupRestoreIntro, @NonNull TextView backupRestoreLabel,
      @NonNull Button backupToZipButton, @NonNull Button cleanExportDirectoryButton,
      @NonNull TextView cleanExportDirectoryLabel, @NonNull TextView cleanExportDirectoryText,
      @NonNull TextView dbManagementIntro, @NonNull Button deleteOldActivityDB,
      @NonNull TextView emptyActivityDataTitle, @NonNull Button emptyDBButton,
      @NonNull TextView emptyDBText, @NonNull Button exportDataButton,
      @NonNull TextView exportImportLabel, @NonNull Button importDataButton,
      @NonNull TextView mergeOldActivityDataTitle, @NonNull Button restoreFromZipButton,
      @NonNull Button showContentDataButton) {
    this.rootView = rootView;
    this.activityDataManagementPath = activityDataManagementPath;
    this.activityDataManagementPath2 = activityDataManagementPath2;
    this.backupRestoreIntro = backupRestoreIntro;
    this.backupRestoreLabel = backupRestoreLabel;
    this.backupToZipButton = backupToZipButton;
    this.cleanExportDirectoryButton = cleanExportDirectoryButton;
    this.cleanExportDirectoryLabel = cleanExportDirectoryLabel;
    this.cleanExportDirectoryText = cleanExportDirectoryText;
    this.dbManagementIntro = dbManagementIntro;
    this.deleteOldActivityDB = deleteOldActivityDB;
    this.emptyActivityDataTitle = emptyActivityDataTitle;
    this.emptyDBButton = emptyDBButton;
    this.emptyDBText = emptyDBText;
    this.exportDataButton = exportDataButton;
    this.exportImportLabel = exportImportLabel;
    this.importDataButton = importDataButton;
    this.mergeOldActivityDataTitle = mergeOldActivityDataTitle;
    this.restoreFromZipButton = restoreFromZipButton;
    this.showContentDataButton = showContentDataButton;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDataManagementBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDataManagementBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_data_management, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDataManagementBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.activity_data_management_path;
      TextView activityDataManagementPath = ViewBindings.findChildViewById(rootView, id);
      if (activityDataManagementPath == null) {
        break missingId;
      }

      id = R.id.activity_data_management_path2;
      TextView activityDataManagementPath2 = ViewBindings.findChildViewById(rootView, id);
      if (activityDataManagementPath2 == null) {
        break missingId;
      }

      id = R.id.backup_restore_intro;
      TextView backupRestoreIntro = ViewBindings.findChildViewById(rootView, id);
      if (backupRestoreIntro == null) {
        break missingId;
      }

      id = R.id.backupRestoreLabel;
      TextView backupRestoreLabel = ViewBindings.findChildViewById(rootView, id);
      if (backupRestoreLabel == null) {
        break missingId;
      }

      id = R.id.backupToZipButton;
      Button backupToZipButton = ViewBindings.findChildViewById(rootView, id);
      if (backupToZipButton == null) {
        break missingId;
      }

      id = R.id.cleanExportDirectoryButton;
      Button cleanExportDirectoryButton = ViewBindings.findChildViewById(rootView, id);
      if (cleanExportDirectoryButton == null) {
        break missingId;
      }

      id = R.id.cleanExportDirectory_label;
      TextView cleanExportDirectoryLabel = ViewBindings.findChildViewById(rootView, id);
      if (cleanExportDirectoryLabel == null) {
        break missingId;
      }

      id = R.id.cleanExportDirectory_text;
      TextView cleanExportDirectoryText = ViewBindings.findChildViewById(rootView, id);
      if (cleanExportDirectoryText == null) {
        break missingId;
      }

      id = R.id.db_management_intro;
      TextView dbManagementIntro = ViewBindings.findChildViewById(rootView, id);
      if (dbManagementIntro == null) {
        break missingId;
      }

      id = R.id.deleteOldActivityDB;
      Button deleteOldActivityDB = ViewBindings.findChildViewById(rootView, id);
      if (deleteOldActivityDB == null) {
        break missingId;
      }

      id = R.id.emptyActivityDataTitle;
      TextView emptyActivityDataTitle = ViewBindings.findChildViewById(rootView, id);
      if (emptyActivityDataTitle == null) {
        break missingId;
      }

      id = R.id.emptyDBButton;
      Button emptyDBButton = ViewBindings.findChildViewById(rootView, id);
      if (emptyDBButton == null) {
        break missingId;
      }

      id = R.id.emptyDBText;
      TextView emptyDBText = ViewBindings.findChildViewById(rootView, id);
      if (emptyDBText == null) {
        break missingId;
      }

      id = R.id.exportDataButton;
      Button exportDataButton = ViewBindings.findChildViewById(rootView, id);
      if (exportDataButton == null) {
        break missingId;
      }

      id = R.id.exportImportLabel;
      TextView exportImportLabel = ViewBindings.findChildViewById(rootView, id);
      if (exportImportLabel == null) {
        break missingId;
      }

      id = R.id.importDataButton;
      Button importDataButton = ViewBindings.findChildViewById(rootView, id);
      if (importDataButton == null) {
        break missingId;
      }

      id = R.id.mergeOldActivityDataTitle;
      TextView mergeOldActivityDataTitle = ViewBindings.findChildViewById(rootView, id);
      if (mergeOldActivityDataTitle == null) {
        break missingId;
      }

      id = R.id.restoreFromZipButton;
      Button restoreFromZipButton = ViewBindings.findChildViewById(rootView, id);
      if (restoreFromZipButton == null) {
        break missingId;
      }

      id = R.id.showContentDataButton;
      Button showContentDataButton = ViewBindings.findChildViewById(rootView, id);
      if (showContentDataButton == null) {
        break missingId;
      }

      return new ActivityDataManagementBinding((ScrollView) rootView, activityDataManagementPath,
          activityDataManagementPath2, backupRestoreIntro, backupRestoreLabel, backupToZipButton,
          cleanExportDirectoryButton, cleanExportDirectoryLabel, cleanExportDirectoryText,
          dbManagementIntro, deleteOldActivityDB, emptyActivityDataTitle, emptyDBButton,
          emptyDBText, exportDataButton, exportImportLabel, importDataButton,
          mergeOldActivityDataTitle, restoreFromZipButton, showContentDataButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

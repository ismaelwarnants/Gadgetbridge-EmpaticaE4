// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class QhybridElementPopupViewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText qhybridWidgetElementId;

  @NonNull
  public final RadioGroup qhybridWidgetElementPosition;

  @NonNull
  public final RadioGroup qhybridWidgetElementType;

  @NonNull
  public final EditText qhybridWidgetElementValue;

  @NonNull
  public final RadioButton qhybridWidgetElementsPositionLower;

  @NonNull
  public final RadioButton qhybridWidgetElementsPositionUppper;

  @NonNull
  public final RadioButton qhybridWidgetElementsTypeBackground;

  @NonNull
  public final RadioButton qhybridWidgetElementsTypeText;

  private QhybridElementPopupViewBinding(@NonNull LinearLayout rootView,
      @NonNull EditText qhybridWidgetElementId, @NonNull RadioGroup qhybridWidgetElementPosition,
      @NonNull RadioGroup qhybridWidgetElementType, @NonNull EditText qhybridWidgetElementValue,
      @NonNull RadioButton qhybridWidgetElementsPositionLower,
      @NonNull RadioButton qhybridWidgetElementsPositionUppper,
      @NonNull RadioButton qhybridWidgetElementsTypeBackground,
      @NonNull RadioButton qhybridWidgetElementsTypeText) {
    this.rootView = rootView;
    this.qhybridWidgetElementId = qhybridWidgetElementId;
    this.qhybridWidgetElementPosition = qhybridWidgetElementPosition;
    this.qhybridWidgetElementType = qhybridWidgetElementType;
    this.qhybridWidgetElementValue = qhybridWidgetElementValue;
    this.qhybridWidgetElementsPositionLower = qhybridWidgetElementsPositionLower;
    this.qhybridWidgetElementsPositionUppper = qhybridWidgetElementsPositionUppper;
    this.qhybridWidgetElementsTypeBackground = qhybridWidgetElementsTypeBackground;
    this.qhybridWidgetElementsTypeText = qhybridWidgetElementsTypeText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static QhybridElementPopupViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static QhybridElementPopupViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.qhybrid_element_popup_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static QhybridElementPopupViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.qhybrid_widget_element_id;
      EditText qhybridWidgetElementId = ViewBindings.findChildViewById(rootView, id);
      if (qhybridWidgetElementId == null) {
        break missingId;
      }

      id = R.id.qhybrid_widget_element_position;
      RadioGroup qhybridWidgetElementPosition = ViewBindings.findChildViewById(rootView, id);
      if (qhybridWidgetElementPosition == null) {
        break missingId;
      }

      id = R.id.qhybrid_widget_element_type;
      RadioGroup qhybridWidgetElementType = ViewBindings.findChildViewById(rootView, id);
      if (qhybridWidgetElementType == null) {
        break missingId;
      }

      id = R.id.qhybrid_widget_element_value;
      EditText qhybridWidgetElementValue = ViewBindings.findChildViewById(rootView, id);
      if (qhybridWidgetElementValue == null) {
        break missingId;
      }

      id = R.id.qhybrid_widget_elements_position_lower;
      RadioButton qhybridWidgetElementsPositionLower = ViewBindings.findChildViewById(rootView, id);
      if (qhybridWidgetElementsPositionLower == null) {
        break missingId;
      }

      id = R.id.qhybrid_widget_elements_position_uppper;
      RadioButton qhybridWidgetElementsPositionUppper = ViewBindings.findChildViewById(rootView, id);
      if (qhybridWidgetElementsPositionUppper == null) {
        break missingId;
      }

      id = R.id.qhybrid_widget_elements_type_background;
      RadioButton qhybridWidgetElementsTypeBackground = ViewBindings.findChildViewById(rootView, id);
      if (qhybridWidgetElementsTypeBackground == null) {
        break missingId;
      }

      id = R.id.qhybrid_widget_elements_type_text;
      RadioButton qhybridWidgetElementsTypeText = ViewBindings.findChildViewById(rootView, id);
      if (qhybridWidgetElementsTypeText == null) {
        break missingId;
      }

      return new QhybridElementPopupViewBinding((LinearLayout) rootView, qhybridWidgetElementId,
          qhybridWidgetElementPosition, qhybridWidgetElementType, qhybridWidgetElementValue,
          qhybridWidgetElementsPositionLower, qhybridWidgetElementsPositionUppper,
          qhybridWidgetElementsTypeBackground, qhybridWidgetElementsTypeText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class DashboardWidgetGenericGaugeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RelativeLayout cardLayout;

  @NonNull
  public final ImageView gaugeBar;

  @NonNull
  public final TextView gaugeLabel;

  @NonNull
  public final TextView gaugeValue;

  private DashboardWidgetGenericGaugeBinding(@NonNull LinearLayout rootView,
      @NonNull RelativeLayout cardLayout, @NonNull ImageView gaugeBar, @NonNull TextView gaugeLabel,
      @NonNull TextView gaugeValue) {
    this.rootView = rootView;
    this.cardLayout = cardLayout;
    this.gaugeBar = gaugeBar;
    this.gaugeLabel = gaugeLabel;
    this.gaugeValue = gaugeValue;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DashboardWidgetGenericGaugeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DashboardWidgetGenericGaugeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dashboard_widget_generic_gauge, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DashboardWidgetGenericGaugeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_layout;
      RelativeLayout cardLayout = ViewBindings.findChildViewById(rootView, id);
      if (cardLayout == null) {
        break missingId;
      }

      id = R.id.gauge_bar;
      ImageView gaugeBar = ViewBindings.findChildViewById(rootView, id);
      if (gaugeBar == null) {
        break missingId;
      }

      id = R.id.gauge_label;
      TextView gaugeLabel = ViewBindings.findChildViewById(rootView, id);
      if (gaugeLabel == null) {
        break missingId;
      }

      id = R.id.gauge_value;
      TextView gaugeValue = ViewBindings.findChildViewById(rootView, id);
      if (gaugeValue == null) {
        break missingId;
      }

      return new DashboardWidgetGenericGaugeBinding((LinearLayout) rootView, cardLayout, gaugeBar,
          gaugeLabel, gaugeValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

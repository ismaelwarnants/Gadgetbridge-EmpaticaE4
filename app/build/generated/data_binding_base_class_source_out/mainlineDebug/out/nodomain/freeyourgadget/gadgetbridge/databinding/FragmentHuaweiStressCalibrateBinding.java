// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import com.google.android.material.slider.Slider;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class FragmentHuaweiStressCalibrateBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CheckBox huaweiStressCalibrate;

  @NonNull
  public final Button huaweiStressCalibrateAgain;

  @NonNull
  public final Button huaweiStressCalibrateFinish;

  @NonNull
  public final Slider huaweiStressCalibrateSlider;

  @NonNull
  public final Button huaweiStressCalibrateStart;

  @NonNull
  public final CircularProgressIndicator huaweiStressCountdown;

  @NonNull
  public final TextView huaweiStressCountdownTime;

  @NonNull
  public final TextView huaweiStressLevel;

  @NonNull
  public final RelativeLayout huaweiStressMeasure;

  @NonNull
  public final RelativeLayout huaweiStressResult;

  @NonNull
  public final TextView huaweiStressScore;

  private FragmentHuaweiStressCalibrateBinding(@NonNull RelativeLayout rootView,
      @NonNull CheckBox huaweiStressCalibrate, @NonNull Button huaweiStressCalibrateAgain,
      @NonNull Button huaweiStressCalibrateFinish, @NonNull Slider huaweiStressCalibrateSlider,
      @NonNull Button huaweiStressCalibrateStart,
      @NonNull CircularProgressIndicator huaweiStressCountdown,
      @NonNull TextView huaweiStressCountdownTime, @NonNull TextView huaweiStressLevel,
      @NonNull RelativeLayout huaweiStressMeasure, @NonNull RelativeLayout huaweiStressResult,
      @NonNull TextView huaweiStressScore) {
    this.rootView = rootView;
    this.huaweiStressCalibrate = huaweiStressCalibrate;
    this.huaweiStressCalibrateAgain = huaweiStressCalibrateAgain;
    this.huaweiStressCalibrateFinish = huaweiStressCalibrateFinish;
    this.huaweiStressCalibrateSlider = huaweiStressCalibrateSlider;
    this.huaweiStressCalibrateStart = huaweiStressCalibrateStart;
    this.huaweiStressCountdown = huaweiStressCountdown;
    this.huaweiStressCountdownTime = huaweiStressCountdownTime;
    this.huaweiStressLevel = huaweiStressLevel;
    this.huaweiStressMeasure = huaweiStressMeasure;
    this.huaweiStressResult = huaweiStressResult;
    this.huaweiStressScore = huaweiStressScore;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHuaweiStressCalibrateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHuaweiStressCalibrateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_huawei_stress_calibrate, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHuaweiStressCalibrateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.huawei_stress_calibrate;
      CheckBox huaweiStressCalibrate = ViewBindings.findChildViewById(rootView, id);
      if (huaweiStressCalibrate == null) {
        break missingId;
      }

      id = R.id.huawei_stress_calibrate_again;
      Button huaweiStressCalibrateAgain = ViewBindings.findChildViewById(rootView, id);
      if (huaweiStressCalibrateAgain == null) {
        break missingId;
      }

      id = R.id.huawei_stress_calibrate_finish;
      Button huaweiStressCalibrateFinish = ViewBindings.findChildViewById(rootView, id);
      if (huaweiStressCalibrateFinish == null) {
        break missingId;
      }

      id = R.id.huawei_stress_calibrate_slider;
      Slider huaweiStressCalibrateSlider = ViewBindings.findChildViewById(rootView, id);
      if (huaweiStressCalibrateSlider == null) {
        break missingId;
      }

      id = R.id.huawei_stress_calibrate_start;
      Button huaweiStressCalibrateStart = ViewBindings.findChildViewById(rootView, id);
      if (huaweiStressCalibrateStart == null) {
        break missingId;
      }

      id = R.id.huawei_stress_countdown;
      CircularProgressIndicator huaweiStressCountdown = ViewBindings.findChildViewById(rootView, id);
      if (huaweiStressCountdown == null) {
        break missingId;
      }

      id = R.id.huawei_stress_countdown_time;
      TextView huaweiStressCountdownTime = ViewBindings.findChildViewById(rootView, id);
      if (huaweiStressCountdownTime == null) {
        break missingId;
      }

      id = R.id.huawei_stress_level;
      TextView huaweiStressLevel = ViewBindings.findChildViewById(rootView, id);
      if (huaweiStressLevel == null) {
        break missingId;
      }

      id = R.id.huawei_stress_measure;
      RelativeLayout huaweiStressMeasure = ViewBindings.findChildViewById(rootView, id);
      if (huaweiStressMeasure == null) {
        break missingId;
      }

      id = R.id.huawei_stress_result;
      RelativeLayout huaweiStressResult = ViewBindings.findChildViewById(rootView, id);
      if (huaweiStressResult == null) {
        break missingId;
      }

      id = R.id.huawei_stress_score;
      TextView huaweiStressScore = ViewBindings.findChildViewById(rootView, id);
      if (huaweiStressScore == null) {
        break missingId;
      }

      return new FragmentHuaweiStressCalibrateBinding((RelativeLayout) rootView,
          huaweiStressCalibrate, huaweiStressCalibrateAgain, huaweiStressCalibrateFinish,
          huaweiStressCalibrateSlider, huaweiStressCalibrateStart, huaweiStressCountdown,
          huaweiStressCountdownTime, huaweiStressLevel, huaweiStressMeasure, huaweiStressResult,
          huaweiStressScore);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

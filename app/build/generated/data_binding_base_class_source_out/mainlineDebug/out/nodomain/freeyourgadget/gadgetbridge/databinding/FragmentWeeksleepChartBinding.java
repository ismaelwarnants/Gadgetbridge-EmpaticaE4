// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.github.mikephil.charting.charts.BarChart;
import com.github.mikephil.charting.charts.LineChart;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class FragmentWeeksleepChartBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView balance;

  @NonNull
  public final TextView sleepChartLegendAwakeLegend;

  @NonNull
  public final TextView sleepChartLegendAwakeTime;

  @NonNull
  public final LinearLayout sleepChartLegendAwakeTimeWrapper;

  @NonNull
  public final TextView sleepChartLegendDeepLegend;

  @NonNull
  public final TextView sleepChartLegendDeepTime;

  @NonNull
  public final TextView sleepChartLegendLightLegend;

  @NonNull
  public final TextView sleepChartLegendLightTime;

  @NonNull
  public final TextView sleepChartLegendRemLegend;

  @NonNull
  public final TextView sleepChartLegendRemTime;

  @NonNull
  public final LinearLayout sleepChartLegendRemTimeWrapper;

  @NonNull
  public final TextView sleepDates;

  @NonNull
  public final TextView sleepScoreAverage;

  @NonNull
  public final LineChart sleepScoreChart;

  @NonNull
  public final TextView sleepScoreHighest;

  @NonNull
  public final TextView sleepScoreLowest;

  @NonNull
  public final LinearLayout sleepScoreWrapper;

  @NonNull
  public final BarChart weekSleepChart;

  private FragmentWeeksleepChartBinding(@NonNull ScrollView rootView, @NonNull TextView balance,
      @NonNull TextView sleepChartLegendAwakeLegend, @NonNull TextView sleepChartLegendAwakeTime,
      @NonNull LinearLayout sleepChartLegendAwakeTimeWrapper,
      @NonNull TextView sleepChartLegendDeepLegend, @NonNull TextView sleepChartLegendDeepTime,
      @NonNull TextView sleepChartLegendLightLegend, @NonNull TextView sleepChartLegendLightTime,
      @NonNull TextView sleepChartLegendRemLegend, @NonNull TextView sleepChartLegendRemTime,
      @NonNull LinearLayout sleepChartLegendRemTimeWrapper, @NonNull TextView sleepDates,
      @NonNull TextView sleepScoreAverage, @NonNull LineChart sleepScoreChart,
      @NonNull TextView sleepScoreHighest, @NonNull TextView sleepScoreLowest,
      @NonNull LinearLayout sleepScoreWrapper, @NonNull BarChart weekSleepChart) {
    this.rootView = rootView;
    this.balance = balance;
    this.sleepChartLegendAwakeLegend = sleepChartLegendAwakeLegend;
    this.sleepChartLegendAwakeTime = sleepChartLegendAwakeTime;
    this.sleepChartLegendAwakeTimeWrapper = sleepChartLegendAwakeTimeWrapper;
    this.sleepChartLegendDeepLegend = sleepChartLegendDeepLegend;
    this.sleepChartLegendDeepTime = sleepChartLegendDeepTime;
    this.sleepChartLegendLightLegend = sleepChartLegendLightLegend;
    this.sleepChartLegendLightTime = sleepChartLegendLightTime;
    this.sleepChartLegendRemLegend = sleepChartLegendRemLegend;
    this.sleepChartLegendRemTime = sleepChartLegendRemTime;
    this.sleepChartLegendRemTimeWrapper = sleepChartLegendRemTimeWrapper;
    this.sleepDates = sleepDates;
    this.sleepScoreAverage = sleepScoreAverage;
    this.sleepScoreChart = sleepScoreChart;
    this.sleepScoreHighest = sleepScoreHighest;
    this.sleepScoreLowest = sleepScoreLowest;
    this.sleepScoreWrapper = sleepScoreWrapper;
    this.weekSleepChart = weekSleepChart;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentWeeksleepChartBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentWeeksleepChartBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_weeksleep_chart, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentWeeksleepChartBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.balance;
      TextView balance = ViewBindings.findChildViewById(rootView, id);
      if (balance == null) {
        break missingId;
      }

      id = R.id.sleep_chart_legend_awake_legend;
      TextView sleepChartLegendAwakeLegend = ViewBindings.findChildViewById(rootView, id);
      if (sleepChartLegendAwakeLegend == null) {
        break missingId;
      }

      id = R.id.sleep_chart_legend_awake_time;
      TextView sleepChartLegendAwakeTime = ViewBindings.findChildViewById(rootView, id);
      if (sleepChartLegendAwakeTime == null) {
        break missingId;
      }

      id = R.id.sleep_chart_legend_awake_time_wrapper;
      LinearLayout sleepChartLegendAwakeTimeWrapper = ViewBindings.findChildViewById(rootView, id);
      if (sleepChartLegendAwakeTimeWrapper == null) {
        break missingId;
      }

      id = R.id.sleep_chart_legend_deep_legend;
      TextView sleepChartLegendDeepLegend = ViewBindings.findChildViewById(rootView, id);
      if (sleepChartLegendDeepLegend == null) {
        break missingId;
      }

      id = R.id.sleep_chart_legend_deep_time;
      TextView sleepChartLegendDeepTime = ViewBindings.findChildViewById(rootView, id);
      if (sleepChartLegendDeepTime == null) {
        break missingId;
      }

      id = R.id.sleep_chart_legend_light_legend;
      TextView sleepChartLegendLightLegend = ViewBindings.findChildViewById(rootView, id);
      if (sleepChartLegendLightLegend == null) {
        break missingId;
      }

      id = R.id.sleep_chart_legend_light_time;
      TextView sleepChartLegendLightTime = ViewBindings.findChildViewById(rootView, id);
      if (sleepChartLegendLightTime == null) {
        break missingId;
      }

      id = R.id.sleep_chart_legend_rem_legend;
      TextView sleepChartLegendRemLegend = ViewBindings.findChildViewById(rootView, id);
      if (sleepChartLegendRemLegend == null) {
        break missingId;
      }

      id = R.id.sleep_chart_legend_rem_time;
      TextView sleepChartLegendRemTime = ViewBindings.findChildViewById(rootView, id);
      if (sleepChartLegendRemTime == null) {
        break missingId;
      }

      id = R.id.sleep_chart_legend_rem_time_wrapper;
      LinearLayout sleepChartLegendRemTimeWrapper = ViewBindings.findChildViewById(rootView, id);
      if (sleepChartLegendRemTimeWrapper == null) {
        break missingId;
      }

      id = R.id.sleep_dates;
      TextView sleepDates = ViewBindings.findChildViewById(rootView, id);
      if (sleepDates == null) {
        break missingId;
      }

      id = R.id.sleep_score_average;
      TextView sleepScoreAverage = ViewBindings.findChildViewById(rootView, id);
      if (sleepScoreAverage == null) {
        break missingId;
      }

      id = R.id.sleep_score_chart;
      LineChart sleepScoreChart = ViewBindings.findChildViewById(rootView, id);
      if (sleepScoreChart == null) {
        break missingId;
      }

      id = R.id.sleep_score_highest;
      TextView sleepScoreHighest = ViewBindings.findChildViewById(rootView, id);
      if (sleepScoreHighest == null) {
        break missingId;
      }

      id = R.id.sleep_score_lowest;
      TextView sleepScoreLowest = ViewBindings.findChildViewById(rootView, id);
      if (sleepScoreLowest == null) {
        break missingId;
      }

      id = R.id.sleep_score_wrapper;
      LinearLayout sleepScoreWrapper = ViewBindings.findChildViewById(rootView, id);
      if (sleepScoreWrapper == null) {
        break missingId;
      }

      id = R.id.week_sleep_chart;
      BarChart weekSleepChart = ViewBindings.findChildViewById(rootView, id);
      if (weekSleepChart == null) {
        break missingId;
      }

      return new FragmentWeeksleepChartBinding((ScrollView) rootView, balance,
          sleepChartLegendAwakeLegend, sleepChartLegendAwakeTime, sleepChartLegendAwakeTimeWrapper,
          sleepChartLegendDeepLegend, sleepChartLegendDeepTime, sleepChartLegendLightLegend,
          sleepChartLegendLightTime, sleepChartLegendRemLegend, sleepChartLegendRemTime,
          sleepChartLegendRemTimeWrapper, sleepDates, sleepScoreAverage, sleepScoreChart,
          sleepScoreHighest, sleepScoreLowest, sleepScoreWrapper, weekSleepChart);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

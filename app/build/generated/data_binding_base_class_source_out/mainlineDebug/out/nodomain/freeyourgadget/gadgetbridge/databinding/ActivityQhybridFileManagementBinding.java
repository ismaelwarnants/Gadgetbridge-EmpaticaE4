// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.materialswitch.MaterialSwitch;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class ActivityQhybridFileManagementBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button qhybridButtonDownloadFile;

  @NonNull
  public final Button qhybridButtonUploadFile;

  @NonNull
  public final Spinner qhybridFileTypes;

  @NonNull
  public final MaterialSwitch qhybridSwitchEncryptedFile;

  @NonNull
  public final MaterialSwitch sqhybridSwitchGenerateFileHeader;

  private ActivityQhybridFileManagementBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button qhybridButtonDownloadFile, @NonNull Button qhybridButtonUploadFile,
      @NonNull Spinner qhybridFileTypes, @NonNull MaterialSwitch qhybridSwitchEncryptedFile,
      @NonNull MaterialSwitch sqhybridSwitchGenerateFileHeader) {
    this.rootView = rootView;
    this.qhybridButtonDownloadFile = qhybridButtonDownloadFile;
    this.qhybridButtonUploadFile = qhybridButtonUploadFile;
    this.qhybridFileTypes = qhybridFileTypes;
    this.qhybridSwitchEncryptedFile = qhybridSwitchEncryptedFile;
    this.sqhybridSwitchGenerateFileHeader = sqhybridSwitchGenerateFileHeader;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityQhybridFileManagementBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityQhybridFileManagementBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_qhybrid_file_management, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityQhybridFileManagementBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.qhybrid_button_download_file;
      Button qhybridButtonDownloadFile = ViewBindings.findChildViewById(rootView, id);
      if (qhybridButtonDownloadFile == null) {
        break missingId;
      }

      id = R.id.qhybrid_button_upload_file;
      Button qhybridButtonUploadFile = ViewBindings.findChildViewById(rootView, id);
      if (qhybridButtonUploadFile == null) {
        break missingId;
      }

      id = R.id.qhybrid_file_types;
      Spinner qhybridFileTypes = ViewBindings.findChildViewById(rootView, id);
      if (qhybridFileTypes == null) {
        break missingId;
      }

      id = R.id.qhybrid_switch_encrypted_file;
      MaterialSwitch qhybridSwitchEncryptedFile = ViewBindings.findChildViewById(rootView, id);
      if (qhybridSwitchEncryptedFile == null) {
        break missingId;
      }

      id = R.id.sqhybrid_switch_generate_file_header;
      MaterialSwitch sqhybridSwitchGenerateFileHeader = ViewBindings.findChildViewById(rootView, id);
      if (sqhybridSwitchGenerateFileHeader == null) {
        break missingId;
      }

      return new ActivityQhybridFileManagementBinding((ConstraintLayout) rootView,
          qhybridButtonDownloadFile, qhybridButtonUploadFile, qhybridFileTypes,
          qhybridSwitchEncryptedFile, sqhybridSwitchGenerateFileHeader);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

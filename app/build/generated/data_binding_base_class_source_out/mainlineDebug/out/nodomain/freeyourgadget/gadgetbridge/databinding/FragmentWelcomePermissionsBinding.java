// Generated by view binder compiler. Do not edit!
package nodomain.freeyourgadget.gadgetbridge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nodomain.freeyourgadget.gadgetbridge.R;

public final class FragmentWelcomePermissionsBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final Button buttonDoNotAskAgain;

  @NonNull
  public final Button buttonRequestAll;

  @NonNull
  public final RecyclerView permissionsList;

  @NonNull
  public final TextView permissionsTitle;

  private FragmentWelcomePermissionsBinding(@NonNull NestedScrollView rootView,
      @NonNull Button buttonDoNotAskAgain, @NonNull Button buttonRequestAll,
      @NonNull RecyclerView permissionsList, @NonNull TextView permissionsTitle) {
    this.rootView = rootView;
    this.buttonDoNotAskAgain = buttonDoNotAskAgain;
    this.buttonRequestAll = buttonRequestAll;
    this.permissionsList = permissionsList;
    this.permissionsTitle = permissionsTitle;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentWelcomePermissionsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentWelcomePermissionsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_welcome_permissions, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentWelcomePermissionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_do_not_ask_again;
      Button buttonDoNotAskAgain = ViewBindings.findChildViewById(rootView, id);
      if (buttonDoNotAskAgain == null) {
        break missingId;
      }

      id = R.id.button_request_all;
      Button buttonRequestAll = ViewBindings.findChildViewById(rootView, id);
      if (buttonRequestAll == null) {
        break missingId;
      }

      id = R.id.permissions_list;
      RecyclerView permissionsList = ViewBindings.findChildViewById(rootView, id);
      if (permissionsList == null) {
        break missingId;
      }

      id = R.id.permissions_title;
      TextView permissionsTitle = ViewBindings.findChildViewById(rootView, id);
      if (permissionsTitle == null) {
        break missingId;
      }

      return new FragmentWelcomePermissionsBinding((NestedScrollView) rootView, buttonDoNotAskAgain,
          buttonRequestAll, permissionsList, permissionsTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
